'use strict';

/**
 * File: mobile-menu.js
 *
 * In charge of the main menu navigation on mobile/tablets.
 */
window.inpMcDebug = {};
(function (window, $, app) {

	// Constructor.
	app.init = function () {
		if (parseInt(inp_mc_data.is_debug) === 1) {
			app.createDebugDiv();
			app.updateDebugData();
			app.bindEvents();
		}
	};

	// Combine all events.
	app.bindEvents = function () {
		$('body').on('resize', app.updateDebugData);
	};

	// Create the debug div.
	app.createDebugDiv = function () {
		var debug_html = '<div class="debug-info"></div>';
		$(debug_html).appendTo('body');
	};

	// Update debug info in the debug div.
	app.updateDebugData = function () {
		var $debug = $('.debug-info');
		var data = '';

		// Viewport size.
		data += $(window).width() + 'x' + $(window).height();
		$debug.text(data);
	};

	// Engage!
	$(app.init);
})(window, jQuery, window.inpMcDebug);
'use strict';

/**
 * IE detector
 */
window.inpMcIeDetector = {};
(function (window, $, app) {

	// Constructor.
	app.init = function () {
		var ie_version = app.addBrowserCssSelector();

		if (ie_version) {
			$('html').addClass(ie_version);
		}
	};

	app.addBrowserCssSelector = function (u) {
		var ua = window.navigator.userAgent;var msie = ua.indexOf('MSIE ');
		if (msie > 0) {
			return 'ie ie' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
		}
		var trident = ua.indexOf('Trident/');
		if (trident > 0) {
			var rv = ua.indexOf('rv:');return 'ie ie' + parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
		}
		var edge = ua.indexOf('Edge/');
		if (edge > 0) {
			return 'ie ie' + parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
		}
		return false;
	};

	// Engage!
	$(app.init);
})(window, jQuery, window.inpMcIeDetector);
'use strict';

/**
 * File js-enabled.js
 *
 * If Javascript is enabled, replace the <body> class "no-js".
 */
document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
'use strict';

/**
 * File: mobile-menu.js
 *
 * In charge of the main menu navigation on mobile/tablets.
 */
window.inpMcMobileMenu = {};
(function (window, $, app) {

	// Constructor.
	app.init = function () {
		app.cache();
		app.bindEvents();
		app.prepareMobileMenuMarkup();
	};

	// Cache all the things.
	app.cache = function () {
		app.$c = {
			html: $('html'),
			mobileMenu: $('header#masthead nav.main-navigation'),
			mobileMenuTrigger: $('.trigger-mobile-menu'),
			mobileMenuParents: $('header#masthead nav.main-navigation li.menu-item-has-children'),
			subMenus: $('header#masthead ul.sub-menu')
		};
	};

	// Combine all events.
	app.bindEvents = function () {
		app.$c.mobileMenuTrigger.on('click', app.openMobileMenu);
		app.$c.mobileMenu.on('click', '.close-mobile-menu', app.closeMobileMenu);
		app.$c.mobileMenu.on('click', '.parent-indicator', app.toggleSubMenu);
	};

	// Prepare menu markup (by adding the close button).
	app.prepareMobileMenuMarkup = function () {
		// Add close "X" button to menu.
		var close_button = '<span class="close-mobile-menu">X</span>';
		$(close_button).appendTo(app.$c.mobileMenu);
		app.$c.mobileMenu.attr('aria-expanded', false);

		// Add expand "+" button to items with children.
		app.$c.mobileMenuParents.prepend('<button type="button" aria-expanded="false" class="parent-indicator" aria-label="Open submenu"><span class="down-arrow">+</span></button>');
	};

	// Open mobile menu.
	app.openMobileMenu = function (e) {
		// Global class to let elements change styles when menu opens.
		app.$c.html.addClass('mobile-menu-active');

		app.$c.mobileMenu.addClass('active').attr('aria-expanded', true);
	};

	// Close mobile menu.
	app.closeMobileMenu = function (e) {
		app.$c.html.removeClass('mobile-menu-active');
		app.$c.mobileMenu.removeClass('active').attr('aria-expanded', false);
	};

	// Toggle (open/close) sub-menus.
	app.toggleSubMenu = function (e) {
		//app.$c.subMenus.slideUp();
		$(this).parent().find('> ul.sub-menu').stop().slideToggle();
	};

	// Engage!
	$(app.init);
})(window, jQuery, window.inpMcMobileMenu);
'use strict';

/**
 * File skip-link-focus-fix.js.
 *
 * Helps with accessibility for keyboard only users.
 *
 * Learn more: https://git.io/vWdr2
 */
(function () {
	var isWebkit = -1 < navigator.userAgent.toLowerCase().indexOf('webkit'),
	    isOpera = -1 < navigator.userAgent.toLowerCase().indexOf('opera'),
	    isIe = -1 < navigator.userAgent.toLowerCase().indexOf('msie');

	if ((isWebkit || isOpera || isIe) && document.getElementById && window.addEventListener) {
		window.addEventListener('hashchange', function () {
			var id = location.hash.substring(1),
			    element;

			if (!/^[A-z0-9_-]+$/.test(id)) {
				return;
			}

			element = document.getElementById(id);

			if (element) {
				if (!/^(?:a|select|input|button|textarea)$/i.test(element.tagName)) {
					element.tabIndex = -1;
				}

				element.focus();
			}
		}, false);
	}
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
