@charset "UTF-8";
/*
Theme Name: Inpsyde Mountain Conqueror
Theme URI: https://mosaika.fr
Author: Pierre Sa√Økali
Author URI: https://mosaika.fr
Description: WordPress Theme (exercise) for the Mountain Conqueror website
Version: 1.0.0
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Text Domain: inp-mc
Tags: custom

This theme, like WordPress, is licensed under the GPL.
Based on Underscores http://underscores.me/, (C) 2012-2017 Automattic, Inc.

*/
/**
 * Project specifics
 */
/**
 * Typography / font names
 */
/**
 * Responsive breakpoints
 */
/**
 * Margins and paddings
 */
/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

.screen-reader-text {
  height: 0.0625rem;
  width: 0.0625rem;
  clip: rect(0.0625rem, 0.0625rem, 0.0625rem, 0.0625rem);
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
}

.screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:focus {
  height: auto;
  width: auto;
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 0.125rem 0.125rem rgba(0, 0, 0, 0.6);
  clip: auto;
  color: #20739A;
  display: block;
  font-size: 0.875rem;
  font-weight: 700;
  left: 0.3125rem;
  line-height: normal;
  padding: 0.9375rem 1.4375rem 0.875rem;
  text-decoration: none;
  top: 0.3125rem;
  z-index: 100000;
}

.clearfix::after, section.site-content::after, form div.inputs::after, form.wpcf7-form div.inputs::after {
  content: "";
  display: table;
  clear: both;
  border-collapse: collapse;
}

.inline {
  display: inline-block;
}

.list-inline, header#masthead nav.main-navigation > ul.menu, header#masthead nav.main-navigation > ul.menu li > ul.sub-menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

.list-inline li, header#masthead nav.main-navigation > ul.menu li, header#masthead nav.main-navigation > ul.menu li > ul.sub-menu li {
  display: inline-block;
}

a, .link:before, .link:hover:before, form input:focus:not(.button), form select:focus:not(.button), form textarea:focus:not(.button), form.wpcf7-form div.input.focus label {
  transition: .325s all ease-in-out;
}

a:hover, form input, form select, form textarea, form.wpcf7-form div.input label {
  transition: .175s all ease-out;
}

.link:before {
  content: "";
  position: absolute;
  display: block;
}

.container {
  max-width: 1150px;
  margin: 0 auto;
  width: 95%;
}

/**
 * The header, which is actually a left sidebar on this site.
 * Contains logo and main navigation.
 */

/**
 * The content section on the right part of the site.
 */

/**
 * The footer, always positionned at the bottom of the viewport.
 */

/**
 * Style for the left sidebar (wrapper in #masthead),
 * containing the brand logo & primary navigation.
 */
header#masthead .site-title {
  margin: 6vw auto;
  max-width: 70%;
}

header#masthead nav.main-navigation {
  display: none;
}

header#masthead nav.main-navigation > ul.menu > li {
  display: block;
  width: 100%;
  margin-bottom: 1.05rem;
}

header#masthead nav.main-navigation > ul.menu > li > a {
  display: block;
  font-size: 1rem;
  text-align: center;
  background: #171f2a;
  padding: .125em .25em;
  color: #fff;
  text-transform: uppercase;
  position: relative;
  overflow: hidden;
}

header#masthead nav.main-navigation > ul.menu > li > a:hover {
  text-decoration: none;
  background: #364A64;
}

header#masthead nav.main-navigation > ul.menu li.current-menu-item > a, header#masthead nav.main-navigation > ul.menu li.current-menu-ancestor > a, header#masthead nav.main-navigation > ul.menu li.current-menu-parent > a {
  background: #9F3636;
}

header#masthead nav.main-navigation > ul.menu li.menu-item-has-children {
  position: relative;
}

header#masthead nav.main-navigation > ul.menu li.menu-item-has-children:hover > ul.sub-menu {
  display: block;
}

header#masthead nav.main-navigation > ul.menu li > ul.sub-menu {
  position: absolute;
  left: 100%;
  top: 0;
  width: 10em;
  background: rgba(23, 31, 42, 0.9);
  display: none;
  padding-top: .25rem;
  padding-bottom: .25rem;
}

header#masthead nav.main-navigation > ul.menu li > ul.sub-menu li {
  display: block;
}

header#masthead nav.main-navigation > ul.menu li > ul.sub-menu li > a {
  text-transform: uppercase;
  display: block;
  font-size: .85rem;
  color: #fff;
  padding: .375em .5em .375em .75em;
}

/**
 * Styles for the footer at the bottom of the page
 * containing copyright & social networks & secondary navigation.
 */
footer#footer {
  background: rgba(23, 31, 42, 0.9);
  color: #fff;
}

::-moz-selection {
  background: rgba(159, 54, 54, 0.625);
}

::selection {
  background: rgba(159, 54, 54, 0.625);
}

body.no-scroll, html.no-scroll {
  overflow: hidden;
}

html {
  width: 100%;
  height: 100%;
  font-size: 19px;
  /**
	 * Use the mixins below for an adaptative font size.
	 */
}

body {
  font-family: "Sanchez", "Georgia", "Tahoma", "Helvetica Neue", sans-serif;
  color: #0F1E2D;
  height: 100%;
}

body#tinymce {
  margin: 1rem;
}

img {
  max-width: 100%;
  vertical-align: middle;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Teko", "Helvetica Neue", sans-serif;
  font-weight: 400;
  margin: 1em 0 .5em;
  letter-spacing: -0.01em;
  line-height: 1.2;
  position: relative;
}

h1 strong, h2 strong, h3 strong, h4 strong, h5 strong, h6 strong {
  color: #364A64;
  font-weight: 400;
}

a {
  color: #364A64;
  text-decoration: none;
}

a:visited {
  color: #1b2532;
}

a:hover, a:active {
  text-decoration: underline;
  color: #9F3636;
}

.button, form input[type=submit] {
  border-radius: 10rem;
  background: #9F3636;
  color: #fff;
  font-size: 1.4rem;
  display: inline-block;
  padding: .75em 4em;
  border: 2px solid #9F3636;
  overflow: hidden;
  text-align: center;
}

.button:hover, form input:hover[type=submit], .button.transparent, form input.transparent[type=submit] {
  background: #fff;
  color: #9F3636;
}

.button.transparent:hover, form input.transparent:hover[type=submit] {
  background: #9F3636;
  color: #fff;
}

.button.blue, form input.blue[type=submit] {
  background: #364A64;
  border-color: #364A64;
}

.button.blue:hover, form input.blue:hover[type=submit] {
  background: #fff;
  color: #364A64;
}

.button.white, form input.white[type=submit] {
  background: #fff;
  color: #9F3636;
  border-color: #fff;
}

.button.white:hover, form input.white:hover[type=submit] {
  background: #9F3636;
  border-color: #9F3636;
  color: #fff;
}

.link {
  font-weight: bold;
  color: #9F3636;
  position: relative;
}

.link span {
  position: relative;
  z-index: 10;
}

.link:before {
  z-index: 1;
  position: absolute;
  bottom: -1px;
  top: 100%;
  left: 0;
  right: 0;
  background: #9F3636;
  border: 1px solid transparent;
}

.link:hover {
  color: #fff;
}

.link:hover:before {
  top: -.325em;
  left: -.5em;
  right: -.5em;
  bottom: -.325em;
  background: transparent;
  border: 1px solid rgba(159, 54, 54, 0.5);
  border-radius: .75rem;
}

form input, form select, form textarea {
  display: block;
  border: none;
  border: 1px solid #0e1e2c;
  margin: 0 0 1rem 0;
  padding: 1rem;
  width: 100%;
  border-radius: .5rem;
  background: #224a6c;
}

form input:focus:not(.button), form select:focus:not(.button), form textarea:focus:not(.button) {
  outline: none;
  border-color: #364A64;
}

form input[type=submit] {
  cursor: pointer;
}

form .button, form input[type=submit] {
  margin-top: 1.5rem;
}

form .button:focus, form input:focus[type=submit] {
  outline: none;
}

form.wpcf7-form {
  margin-top: -1.75rem;
}

form.wpcf7-form br {
  display: none;
}

form.wpcf7-form span.wpcf7-form-control-wrap {
  display: block;
}

form.wpcf7-form div.input {
  position: relative;
  padding-top: 1.75rem;
}

form.wpcf7-form div.input label {
  text-transform: uppercase;
  font-size: 1.25rem;
  color: #0e1e2c;
  top: 0;
  margin: 0;
}

form.wpcf7-form div.input label.visible {
  position: relative;
  top: auto;
  opacity: 1;
}

form.wpcf7-form div.input.focus label {
  opacity: 1;
  top: .5rem;
}

form.wpcf7-form div.input.user-name {
  width: 45%;
  float: left;
  margin-right: 10%;
}

form.wpcf7-form div.input.email {
  width: 45%;
  float: left;
}

form.wpcf7-form div.input span.wpcf7-not-valid-tip {
  color: rgba(255, 255, 255, 0.9);
  background: #eb003b;
  border-radius: 4px;
  padding: .5rem 1rem;
  font-size: 1.25rem;
  display: block;
  position: relative;
  top: -1em;
  font-style: italic;
}

form.wpcf7-form div.wpcf7-response-output {
  display: none;
  margin: 0 0 1rem 0;
  color: rgba(255, 255, 255, 0.9);
  border: none;
  background: #eb003b;
  width: 100%;
  border-radius: 4px;
  padding: .5rem 1rem;
  font-size: 1.25rem;
  font-style: italic;
}

form.wpcf7-form div.wpcf7-response-output.wpcf7-mail-sent-ok {
  background: #23b370;
}

@media (min-width: 768px) {
  .container {
    width: 90%;
  }
  header#masthead {
    width: 21.73913%;
    float: left;
  }
  main#content {
    width: 73.91304%;
    margin-left: 4.34783%;
    float: right;
  }
  footer#footer {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 100;
  }
  header#masthead .site-title {
    max-width: 100%;
    margin: 2rem auto 6vh;
  }
  header#masthead .site-title a:hover {
    opacity: .6;
  }
  header#masthead nav.main-navigation {
    display: block;
  }
  form div.inputs div.input.half {
    width: 47.5%;
    float: left;
  }
  form div.inputs div.input.half + .half {
    margin-left: 5%;
  }
}

@media (min-width: 1024px) {
  .container {
    width: 80%;
  }
}

@media (max-width: 575px) {
  html {
    font-size: 21.85px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
