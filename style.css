@charset "UTF-8";
/*
Theme Name: Inpsyde Mountain Conqueror
Theme URI: https://mosaika.fr
Author: Pierre Sa√Økali
Author URI: https://mosaika.fr
Description: WordPress Theme (exercise) for the Mountain Conqueror website
Version: 1.0.0
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Text Domain: inp-mc
Tags: custom

This theme, like WordPress, is licensed under the GPL.
Based on Underscores http://underscores.me/, (C) 2012-2017 Automattic, Inc.

*/
/**
 * Project specifics
 */
/**
 * Typography / font names
 */
/**
 * Responsive breakpoints
 */
/**
 * Margins and paddings
 */
/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
* {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/**
 * Common stuff (placeholders/reusable classes)
 */
.screen-reader-text {
  height: 0.0625rem;
  width: 0.0625rem;
  clip: rect(0.0625rem, 0.0625rem, 0.0625rem, 0.0625rem);
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
}

.screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:focus {
  height: auto;
  width: auto;
  background-color: #f1f1f1;
  border-radius: 3px;
  box-shadow: 0 0 0.125rem 0.125rem rgba(0, 0, 0, 0.6);
  clip: auto;
  color: #20739A;
  display: block;
  font-size: 0.875rem;
  font-weight: 700;
  left: 0.3125rem;
  line-height: normal;
  padding: 0.9375rem 1.4375rem 0.875rem;
  text-decoration: none;
  top: 0.3125rem;
  z-index: 100000;
}

.clearfix::after, section.site-content::after, div.entry-content::after, div.entry-text-content::after {
  content: "";
  display: table;
  clear: both;
  border-collapse: collapse;
}

.inline {
  display: inline-block;
}

.list-inline, header#masthead nav.main-navigation > ul.menu, header#masthead nav.main-navigation > ul.menu li > ul.sub-menu, footer#footer section.footer-data nav.social ul, footer#footer section.footer-data nav.utility-navigation ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

.list-inline li, header#masthead nav.main-navigation > ul.menu li, header#masthead nav.main-navigation > ul.menu li > ul.sub-menu li, footer#footer section.footer-data nav.social ul li, footer#footer section.footer-data nav.utility-navigation ul li {
  display: inline-block;
}

.link:before, .link:hover:before, form input:focus:not(.button), form select:focus:not(.button), form textarea:focus:not(.button), a {
  transition: .325s all ease-in-out;
}

form input, form select, form textarea, a:hover {
  transition: .175s all ease-out;
}

.link:before {
  content: "";
  position: absolute;
  display: block;
}

.has-string-separator:after {
  content: ">";
  display: inline-block;
  margin: 0 .25em;
}

/**
 * Global layout properties
 */
.container {
  max-width: 1150px;
  margin: 0 auto;
  width: 95%;
}

/**
 * The header, which is actually a left sidebar on this site.
 * Contains logo and main navigation.
 */

/**
 * The content section on the right part of the site.
 */
main#content {
  padding-bottom: 2.5rem;
}

/**
 * The footer, always positionned at the bottom of the viewport.
 */

/**
 * Stylings for specific WP-generated classes.
 */
.alignnone {
  margin: 0.7875rem 2.1rem 2.1rem 0;
}

.aligncenter {
  clear: both;
  display: block;
  margin: 2.1rem auto;
}

.alignleft {
  float: left;
  margin: 0 1.5em .25em 0;
}

.alignright {
  float: right;
  margin: 0 0 0.7875rem 2.1rem;
}

.comment-content a {
  word-wrap: break-word;
}

img.wp-smiley {
  margin-bottom: 0;
  margin-top: 0;
  padding: 0;
  border: none;
}

.wp-caption {
  max-width: 100%;
  margin-bottom: 2.1rem;
}

.wp-caption figcaption {
  background: #a2b7ca;
  font-size: .75rem;
  padding: .5em .25em;
  margin-top: 0;
  font-style: italic;
}

.wp-caption img {
  display: block;
  margin: 0 auto;
}

.wp-caption-text {
  margin: 1em 0;
  text-align: center;
}

.gallery {
  margin-bottom: 1.5em;
}

.gallery-item {
  display: inline-block;
  width: 100%;
  text-align: center;
  vertical-align: top;
}

.gallery-columns-2 .gallery-item {
  max-width: 50%;
}

.gallery-columns-3 .gallery-item {
  max-width: 33.33%;
}

.gallery-columns-4 .gallery-item {
  max-width: 25%;
}

.gallery-columns-5 .gallery-item {
  max-width: 20%;
}

.gallery-columns-6 .gallery-item {
  max-width: 16.66%;
}

.gallery-columns-7 .gallery-item {
  max-width: 14.28%;
}

.gallery-columns-8 .gallery-item {
  max-width: 12.5%;
}

.gallery-columns-9 .gallery-item {
  max-width: 11.11%;
}

.gallery-caption {
  display: block;
}

/**
 * Stylings for buttons & links
 */
.button, form input[type=submit] {
  border-radius: 1.05rem;
  background: #9F3636;
  color: #fff;
  display: inline-block;
  padding: .75em 4em;
  border: 2px solid #9F3636;
  overflow: hidden;
  text-align: center;
}

.button:hover, form input:hover[type=submit], .button.transparent, form input.transparent[type=submit] {
  background: #fff;
  color: #9F3636;
}

.button.transparent:hover, form input.transparent:hover[type=submit] {
  background: #9F3636;
  color: #fff;
}

.button.blue, form input.blue[type=submit] {
  background: #364A64;
  border-color: #364A64;
}

.button.blue:hover, form input.blue:hover[type=submit] {
  background: #fff;
  color: #364A64;
}

.button.white, form input.white[type=submit] {
  background: #fff;
  color: #9F3636;
  border-color: #fff;
}

.button.white:hover, form input.white:hover[type=submit] {
  background: #9F3636;
  border-color: #9F3636;
  color: #fff;
}

.link {
  font-weight: bold;
  color: #9F3636;
  position: relative;
}

.link span {
  position: relative;
  z-index: 10;
}

.link:before {
  z-index: 1;
  position: absolute;
  bottom: -1px;
  top: 100%;
  left: 0;
  right: 0;
  background: #9F3636;
  border: 1px solid transparent;
}

.link:hover {
  color: #fff;
}

.link:hover:before {
  top: -.325em;
  left: -.5em;
  right: -.5em;
  bottom: -.325em;
  background: transparent;
  border: 1px solid rgba(159, 54, 54, 0.5);
  border-radius: .75rem;
}

/**
 * Stylings for forms
 */
form {
  /**
	 * Very basic Contact Form 7 styles
	 */
}

form input, form select, form textarea {
  display: block;
  border: none;
  border: 1px solid #a2b7ca;
  margin: 0 0 0.525rem 0;
  padding: 1.05rem;
  width: 100%;
  border-radius: 0.2625rem;
  background: #d3dde6;
}

form input:focus:not(.button), form select:focus:not(.button), form textarea:focus:not(.button) {
  outline: none;
  border-color: #364A64;
}

form input[type=submit] {
  cursor: pointer;
}

form .button, form input[type=submit] {
  margin-top: 0.525rem;
}

form .button:focus, form input:focus[type=submit] {
  outline: none;
}

form.wpcf7-form br {
  display: none;
}

form.wpcf7-form span.wpcf7-form-control-wrap {
  display: block;
}

form.wpcf7-form div.wpcf7-response-output {
  display: none;
  margin: 0 0 1rem 0;
  color: rgba(255, 255, 255, 0.9);
  border: none;
  background: #eb003b;
  width: 100%;
  border-radius: 4px;
  padding: .5rem 1rem;
  font-size: 1.25rem;
  font-style: italic;
}

form.wpcf7-form div.wpcf7-response-output.wpcf7-mail-sent-ok {
  background: #23b370;
}

/**
 * Stylings for the left sidebar (wrapper in #masthead),
 * containing the brand logo & primary navigation.
 */
header#masthead .site-title {
  margin: 6vw auto;
  max-width: 70%;
}

header#masthead .site-title p, header#masthead .site-title h1 {
  width: 100%;
  margin: 0;
}

header#masthead nav.main-navigation {
  display: none;
}

header#masthead nav.main-navigation > ul.menu > li {
  display: block;
  width: 100%;
  margin-bottom: 1.05rem;
}

header#masthead nav.main-navigation > ul.menu > li > a {
  display: block;
  font-size: 1rem;
  text-align: center;
  background: #171f2a;
  padding: .125em .25em;
  color: #fff;
  text-transform: uppercase;
  position: relative;
  overflow: hidden;
}

header#masthead nav.main-navigation > ul.menu > li:hover > a, header#masthead nav.main-navigation > ul.menu > li:focus > a, header#masthead nav.main-navigation > ul.menu > li:focus-within > a {
  text-decoration: none;
  background: #364A64;
}

header#masthead nav.main-navigation > ul.menu li.current-menu-item > a, header#masthead nav.main-navigation > ul.menu li.current-menu-ancestor > a, header#masthead nav.main-navigation > ul.menu li.current-menu-parent > a {
  background: #9F3636;
}

header#masthead nav.main-navigation > ul.menu li.menu-item-has-children {
  position: relative;
}

header#masthead nav.main-navigation > ul.menu li.menu-item-has-children:hover > ul.sub-menu, header#masthead nav.main-navigation > ul.menu li.menu-item-has-children:focus > ul.sub-menu, header#masthead nav.main-navigation > ul.menu li.menu-item-has-children:focus-within > ul.sub-menu {
  visibility: visible;
  /* shows sub-menu */
  opacity: 1;
  z-index: 1;
  transform: translateY(0%);
  transition-delay: 0s, 0s, 0.2s;
}

header#masthead nav.main-navigation > ul.menu li > ul.sub-menu {
  position: absolute;
  left: 100%;
  top: 0;
  width: 10em;
  background: rgba(54, 74, 100, 0.9);
  padding-top: .25rem;
  padding-bottom: .25rem;
  visibility: hidden;
  opacity: 0;
  transform: translateX(-2rem);
  z-index: -1;
  transition: all 0.2s ease-in-out 0s, visibility 0s linear 0.2s, z-index 0s linear 0.01s;
}

header#masthead nav.main-navigation > ul.menu li > ul.sub-menu li {
  display: block;
}

header#masthead nav.main-navigation > ul.menu li > ul.sub-menu li > a {
  text-transform: uppercase;
  display: block;
  font-size: .85rem;
  color: #fff;
  padding: .375em .5em .375em .75em;
}

/**
 * Logo & "Top content quote" share same height/margin
 * for better alignments
 */

/**
 * Stylings for the top quote before body content.
 * Height is set in _header.scss becaused it should be
 * synced with the logo height.
 */
aside.header-top-quote {
  display: none;
  text-align: center;
}

aside.header-top-quote blockquote {
  font-size: 1.5rem;
  margin: 0;
}

aside.header-top-quote blockquote p {
  margin: 0;
}

aside.header-top-quote blockquote cite {
  display: block;
  font-size: 1rem;
  font-style: normal;
  margin-bottom: 2em;
}

/**
 * Styles for the footer at the bottom of the page
 * containing copyright & social networks & secondary navigation.
 */
footer#footer {
  background: rgba(23, 31, 42, 0.875);
  color: #fff;
  text-align: center;
  padding: 1.5rem 1rem;
  font-size: .85rem;
}

footer#footer a {
  color: #fff;
}

footer#footer section.footer-data div.copyright, footer#footer section.footer-data nav.social, footer#footer section.footer-data nav.utility-navigation {
  display: inline-block;
  margin: 0 .75rem;
}

footer#footer section.footer-data div.copyright {
  margin-left: 0;
}

footer#footer section.footer-data nav.social ul li.title {
  margin-right: .5em;
}

footer#footer section.footer-data nav.social ul li a {
  display: inline-block;
  padding: 0 .175em;
}

footer#footer section.footer-data nav.social ul li a:hover {
  opacity: .625;
  text-decoration: none;
}

footer#footer section.footer-data nav.utility-navigation {
  margin-right: 0;
}

footer#footer section.footer-data nav.utility-navigation ul li {
  margin-right: .375em;
}

footer#footer section.footer-data nav.utility-navigation ul li:last-child {
  margin-right: 0;
}

/**
 * Stylings for elements in page body content
 */
.entry-content p, .entry-content ul, .entry-content ol, .entry-content dl {
  margin: 0 0 1em;
}

.entry-content blockquote {
  font-style: italic;
  padding-left: 4rem;
  margin: 2rem 0 1.5rem;
  quotes: "‚Äú" "‚Äù" "‚Äò" "‚Äô";
  position: relative;
}

.entry-content blockquote:before {
  content: open-quote;
  font-family: Georgia, 'Times New Roman', Times, serif;
  position: absolute;
  opacity: .325;
  font-size: 4rem;
  top: -1rem;
  left: 2rem;
}

.entry-content table {
  width: 100%;
  max-width: 100%;
  table-layout: fixed;
  border-collapse: collapse;
  vertical-align: top;
  margin-bottom: 2rem;
  display: table;
}

.entry-content table tr {
  border-bottom: 1px solid #a2b7ca;
}

.entry-content table td, .entry-content table th {
  vertical-align: top;
  cursor: default;
  padding: .25em .125em;
}

.entry-content table th {
  font-weight: bold;
}

.entry-content dl dt {
  font-weight: bold;
}

.entry-content dl dd {
  margin-bottom: .5em;
}

.entry-content cite {
  font-style: italic;
}

.entry-content code {
  background: #a2b7ca;
}

.entry-content hr {
  margin: 2.1rem 0;
  border: none;
  border-top: 1px solid #0e1e2c;
}

/**
 * Stylings for post appareance in listing/archive pages
 */
article.post {
  border-bottom: 1px solid #0e1e2c;
  padding-bottom: 1.05rem;
  margin-bottom: 1.05rem;
}

.entry-header {
  margin: 0;
}

.entry-header .entry-title {
  margin: 0 0 .5em;
}

footer.entry-footer {
  font-style: italic;
  font-size: 0.85rem;
}

figure.entry-featured-image {
  display: none;
  margin: 0;
}

nav.page-links {
  clear: both;
  margin-top: 2.1rem;
}

::-moz-selection {
  background: rgba(159, 54, 54, 0.625);
}

::selection {
  background: rgba(159, 54, 54, 0.625);
}

body.no-scroll, html.no-scroll {
  overflow: hidden;
}

html {
  width: 100%;
  height: 100%;
  font-size: 19px;
  /**
	 * Use the mixins below for an adaptative font size.
	 */
}

body {
  font-family: "Sanchez", "Georgia", "Tahoma", "Helvetica Neue", sans-serif;
  color: #0F1E2D;
  height: 100%;
}

body#tinymce {
  margin: 1rem;
}

img {
  max-width: 100%;
  height: auto;
  vertical-align: middle;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Teko", "Helvetica Neue", sans-serif;
  font-weight: 400;
  margin: .75em 0 .25em;
  letter-spacing: -0.01em;
  line-height: 1.2;
  position: relative;
}

h1 strong, h2 strong, h3 strong, h4 strong, h5 strong, h6 strong {
  color: #364A64;
  font-weight: 400;
}

h1, .h1 {
  font-size: 2.65rem;
}

h2, .h2 {
  font-size: 2.1rem;
}

h3, .h3 {
  font-size: 1.55rem;
}

h4, .h4 {
  font-size: 1.3rem;
}

h5, .h5 {
  font-size: 1.1rem;
}

h6, .h6 {
  font-size: 1rem;
}

a {
  color: #364A64;
  text-decoration: none;
}

a:visited {
  color: #1b2532;
}

a:hover, a:active {
  text-decoration: underline;
  color: #9F3636;
}

@media (min-width: 768px) {
  .container {
    width: 90%;
  }
  header#masthead {
    width: 21.73913%;
    float: left;
  }
  main#content {
    width: 73.91304%;
    margin-left: 4.34783%;
    float: right;
    padding-bottom: 7.5rem;
  }
  footer#footer {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 100;
  }
  header#masthead .site-title {
    max-width: 90%;
  }
  header#masthead .site-title a:hover {
    opacity: .6;
  }
  header#masthead nav.main-navigation {
    display: block;
  }
  aside.header-top-quote, header#masthead .site-title {
    display: -ms-flexbox;
    display: flex;
    text-align: center;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center;
    margin: 2.5vh auto 5vh;
    height: 25vh;
    min-height: 12.5rem;
  }
  aside.header-top-quote {
    display: -ms-flexbox;
    display: flex;
  }
  article.post {
    padding-bottom: 2.1rem;
    margin-bottom: 3.15rem;
  }
}

@media screen and (max-aspect-ratio: 16 / 9) and (min-width: 768px) {
  aside.header-top-quote, header#masthead .site-title {
    margin-bottom: 2.5vh;
    height: 16vh;
  }
}

@media (min-width: 1024px) {
  .container {
    width: 80%;
  }
  article.post.has-featured-image div.entry-text-content {
    width: 60%;
    margin-right: 4.5%;
    float: left;
  }
  article.post.has-featured-image figure.entry-featured-image {
    position: relative;
    display: block;
    background-size: cover;
    background-position: center center;
    background-repeat: no-repeat;
    border: 1px solid #364A64;
    width: 35%;
    float: right;
    border-radius: 100%;
    height: 0;
    overflow: hidden;
    padding-bottom: 35%;
  }
  article.post.has-featured-image figure.entry-featured-image a {
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
  }
  article.post.has-featured-image figure.entry-featured-image a img {
    opacity: 0;
  }
  article.post.has-featured-image figure.entry-featured-image a:hover {
    background: rgba(54, 74, 100, 0.5);
  }
}

@media (max-width: 575px) {
  html {
    font-size: 21.85px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNzcyIsInN0eWxlLnNjc3MiLCJfdmFyaWFibGVzLnNjc3MiLCJsaWJzL19ub3JtYWxpemUuc2NzcyIsInBhcnRpYWxzL19jb21tb24uc2NzcyIsInBhcnRpYWxzL19sYXlvdXQuc2NzcyIsInBhcnRpYWxzL193b3JkcHJlc3Muc2NzcyIsInBhcnRpYWxzL19idXR0b25zLnNjc3MiLCJwYXJ0aWFscy9fZm9ybXMuc2NzcyIsInBhcnRpYWxzL19oZWFkZXIuc2NzcyIsInBhcnRpYWxzL190b3AtcXVvdGUuc2NzcyIsInBhcnRpYWxzL19mb290ZXIuc2NzcyIsInBhcnRpYWxzL19jb250ZW50LW1hcmt1cC5zY3NzIiwicGFydGlhbHMvX3Bvc3Quc2NzcyIsIl9taXhpbnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUI7QUNBakI7Ozs7Ozs7Ozs7Ozs7OztFQWVFO0FDZkY7O0dBRUc7QUFTSDs7R0FFRztBQUlIOztHQUVHO0FBT0g7O0dBRUc7QUM1Qkg7O2dGQUVnRjtBQUNoRjs7OztHQUlHO0FBSUg7Z0ZBQ2dGO0FBRWhGOzs7Ozs7R0FNRztBQUVIO0VBQ0UsdUJBQXNCO0NBQ3ZCOztBQUVEO0VBQ0Usb0JBQW1CO0NBQ3BCOztBQU5EO0VBU0Usd0JBQXVCO0VBQUUsT0FBTztFQUNoQywyQkFBMEI7RUFBRSxPQUFPO0VBQ25DLCtCQUE4QjtFQUFFLE9BQU87Q0FJeEM7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLFVBQVM7Q0FDVjs7QUFFRDtnRkFDZ0Y7QUFFaEY7Ozs7O0dBS0c7QUFFSDs7Ozs7Ozs7Ozs7OztFQWFFLGVBQWM7Q0FDZjs7QUFFRDs7O0dBR0c7QUFFSDs7OztFQUlFLHNCQUFxQjtFQUFFLE9BQU87RUFDOUIseUJBQXdCO0VBQUUsT0FBTztDQUtsQzs7QUFFRDs7O0dBR0c7QUFFSDtFQUNFLGNBQWE7RUFDYixVQUFTO0NBQ1Y7O0FBRUQ7OztHQUdHO0FIa0JIOztFR2RFLGNBQWE7Q0FDZDs7QUFFRDtnRkFDZ0Y7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WUFBVTtHQUVYO0VBakJIO0lBcUJJLG1CQUFrQjtJQUNsQixlQUFjO0lBQ2QsdUJBQXNCO0lBQ3RCLG1DQUFrQztJQUNsQyw2QkFBNEI7SUFDNUIsMEJYekJhO0lXMEJiLFdBQVM7SUFDVCxhQUFXO0lBQ1gsb0JBQWtCO0lBQ2xCLFVBQVE7SUFDUixpQkFBZ0I7SUFDaEIsb0JBQW1CO0dBaUJwQjtFQWpESDtJQW1DSyxlQUFjO0lBQ2QsbUJBQWtCO0lBQ2xCLFlBQVU7SUFDVixhQUFXO0dBU1g7RUEvQ0w7SUF5Q00sV0FBUztHQUNUO0VBMUNOO0lBNkNNLG1DWDVDVztHVzZDWDtDYnNlTDs7QWNsZ0JBO0VYQ0Q7SUYrQ0UsbUJBQW1CO0dBaUJwQjtDRDZsQ0EiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLypcblRoZW1lIE5hbWU6IElucHN5ZGUgTW91bnRhaW4gQ29ucXVlcm9yXG5UaGVtZSBVUkk6IGh0dHBzOi8vbW9zYWlrYS5mclxuQXV0aG9yOiBQaWVycmUgU2HDr2thbGlcbkF1dGhvciBVUkk6IGh0dHBzOi8vbW9zYWlrYS5mclxuRGVzY3JpcHRpb246IFdvcmRQcmVzcyBUaGVtZSAoZXhlcmNpc2UpIGZvciB0aGUgTW91bnRhaW4gQ29ucXVlcm9yIHdlYnNpdGVcblZlcnNpb246IDEuMC4wXG5MaWNlbnNlOiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2MiBvciBsYXRlclxuTGljZW5zZSBVUkk6IGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9ncGwtMi4wLmh0bWxcblRleHQgRG9tYWluOiBpbnAtbWNcblRhZ3M6IGN1c3RvbVxuXG5UaGlzIHRoZW1lLCBsaWtlIFdvcmRQcmVzcywgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEdQTC5cbkJhc2VkIG9uIFVuZGVyc2NvcmVzIGh0dHA6Ly91bmRlcnNjb3Jlcy5tZS8sIChDKSAyMDEyLTIwMTcgQXV0b21hdHRpYywgSW5jLlxuXG4qL1xuLyoqXG4gKiBQcm9qZWN0IHNwZWNpZmljc1xuICovXG4vKipcbiAqIFR5cG9ncmFwaHkgLyBmb250IG5hbWVzXG4gKi9cbi8qKlxuICogUmVzcG9uc2l2ZSBicmVha3BvaW50c1xuICovXG4vKipcbiAqIE1hcmdpbnMgYW5kIHBhZGRpbmdzXG4gKi9cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICBOb3JtYWxpemUuc2NzcyBzZXR0aW5nc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogSW5jbHVkZXMgbGVnYWN5IGJyb3dzZXIgc3VwcG9ydCBJRTYvN1xuICpcbiAqIFNldCB0byBmYWxzZSBpZiB5b3Ugd2FudCB0byBkcm9wIHN1cHBvcnQgZm9yIElFNiBhbmQgSUU3XG4gKi9cbi8qIEJhc2VcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICogMy4gQ29ycmVjdHMgdGV4dCByZXNpemluZyBvZGRseSBpbiBJRSA2Lzcgd2hlbiBib2R5IGBmb250LXNpemVgIGlzIHNldCB1c2luZ1xuICogIGBlbWAgdW5pdHMuXG4gKi9cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cbioge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBpbmxpbmUtYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgaW4gSUUgNi83LzgvOSBhbmQgRmlyZWZveCAzLlxuICogMi4gTm9ybWFsaXplIHZlcnRpY2FsIGFsaWdubWVudCBvZiBgcHJvZ3Jlc3NgIGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudHMgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBgW2hpZGRlbl1gIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLlxuICogSGlkZSB0aGUgYHRlbXBsYXRlYCBlbGVtZW50IGluIElFIDgvOS8xMC8xMSwgU2FmYXJpLCBhbmQgRmlyZWZveCA8IDIyLlxuICovXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSBvZiBmb2N1c2VkIGVsZW1lbnRzIHdoZW4gdGhleSBhcmUgYWxzbyBpbiBhblxuICogYWN0aXZlL2hvdmVyIHN0YXRlLlxuICovXG5hOmFjdGl2ZSwgYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxlIHNldCB0byBgYm9sZGVyYCBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4gKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkcmVzc2VzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYW5kIHZhcmlhYmxlIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqIDIuIEltcHJvdmVzIGltYWdlIHF1YWxpdHkgd2hlbiBzY2FsZWQgaW4gSUUgNy5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3MgbWFyZ2luIG5vdCBwcmVzZW50IGluIElFIDgvOSBhbmQgU2FmYXJpLlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuaHIge1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqIENvcnJlY3QgZm9udCBmYW1pbHkgc2V0IG9kZGx5IGluIElFIDYsIFNhZmFyaSA0LzUsIGFuZCBDaHJvbWUuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICogNC4gSW1wcm92ZXMgYXBwZWFyYW5jZSBhbmQgY29uc2lzdGVuY3kgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovXG4gIG1hcmdpbjogMDtcbiAgLyogMyAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAqICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICogNC4gUmVtb3ZlcyBpbm5lciBzcGFjaW5nIGluIElFIDcgd2l0aG91dCBhZmZlY3Rpbmcgbm9ybWFsIHRleHQgaW5wdXRzLlxuICogIEtub3duIGlzc3VlOiBpbm5lciBzcGFjaW5nIHJlbWFpbnMgaW4gSUUgNi5cbiAqL1xuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLFxuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgLyogMyAqL1xufVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKiAgS25vd24gaXNzdWU6IGV4Y2VzcyBwYWRkaW5nIHJlbWFpbnMgaW4gSUUgNi5cbiAqL1xuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICogMy4gQ29ycmVjdHMgdGV4dCBub3Qgd3JhcHBpbmcgaW4gRmlyZWZveCAzLlxuICogNC4gQ29ycmVjdHMgYWxpZ25tZW50IGRpc3BsYXllZCBvZGRseSBpbiBJRSA2LzcuXG4gKi9cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIENvbW1vbiBzdHVmZiAocGxhY2Vob2xkZXJzL3JldXNhYmxlIGNsYXNzZXMpXG4gKi9cbi5zY3JlZW4tcmVhZGVyLXRleHQge1xuICBoZWlnaHQ6IDAuMDYyNXJlbTtcbiAgd2lkdGg6IDAuMDYyNXJlbTtcbiAgY2xpcDogcmVjdCgwLjA2MjVyZW0sIDAuMDYyNXJlbSwgMC4wNjI1cmVtLCAwLjA2MjVyZW0pO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbi5zY3JlZW4tcmVhZGVyLXRleHQ6aG92ZXIsIC5zY3JlZW4tcmVhZGVyLXRleHQ6YWN0aXZlLCAuc2NyZWVuLXJlYWRlci10ZXh0OmZvY3VzIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICB3aWR0aDogYXV0bztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBib3gtc2hhZG93OiAwIDAgMC4xMjVyZW0gMC4xMjVyZW0gcmdiYSgwLCAwLCAwLCAwLjYpO1xuICBjbGlwOiBhdXRvO1xuICBjb2xvcjogIzIwNzM5QTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGxlZnQ6IDAuMzEyNXJlbTtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbiAgcGFkZGluZzogMC45Mzc1cmVtIDEuNDM3NXJlbSAwLjg3NXJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0b3A6IDAuMzEyNXJlbTtcbiAgei1pbmRleDogMTAwMDAwO1xufVxuXG4uY2xlYXJmaXg6OmFmdGVyLCBzZWN0aW9uLnNpdGUtY29udGVudDo6YWZ0ZXIsIGRpdi5lbnRyeS1jb250ZW50OjphZnRlciwgZGl2LmVudHJ5LXRleHQtY29udGVudDo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgY2xlYXI6IGJvdGg7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG59XG5cbi5pbmxpbmUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5saXN0LWlubGluZSwgaGVhZGVyI21hc3RoZWFkIG5hdi5tYWluLW5hdmlnYXRpb24gPiB1bC5tZW51LCBoZWFkZXIjbWFzdGhlYWQgbmF2Lm1haW4tbmF2aWdhdGlvbiA+IHVsLm1lbnUgbGkgPiB1bC5zdWItbWVudSwgZm9vdGVyI2Zvb3RlciBzZWN0aW9uLmZvb3Rlci1kYXRhIG5hdi5zb2NpYWwgdWwsIGZvb3RlciNmb290ZXIgc2VjdGlvbi5mb290ZXItZGF0YSBuYXYudXRpbGl0eS1uYXZpZ2F0aW9uIHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4ubGlzdC1pbmxpbmUgbGksIGhlYWRlciNtYXN0aGVhZCBuYXYubWFpbi1uYXZpZ2F0aW9uID4gdWwubWVudSBsaSwgaGVhZGVyI21hc3RoZWFkIG5hdi5tYWluLW5hdmlnYXRpb24gPiB1bC5tZW51IGxpID4gdWwuc3ViLW1lbnUgbGksIGZvb3RlciNmb290ZXIgc2VjdGlvbi5mb290ZXItZGF0YSBuYXYuc29jaWFsIHVsIGxpLCBmb290ZXIjZm9vdGVyIHNlY3Rpb24uZm9vdGVyLWRhdGEgbmF2LnV0aWxpdHktbmF2aWdhdGlvbiB1bCBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmxpbms6YmVmb3JlLCAubGluazpob3ZlcjpiZWZvcmUsIGZvcm0gaW5wdXQ6Zm9jdXM6bm90KC5idXR0b24pLCBmb3JtIHNlbGVjdDpmb2N1czpub3QoLmJ1dHRvbiksIGZvcm0gdGV4dGFyZWE6Zm9jdXM6bm90KC5idXR0b24pLCBhIHtcbiAgdHJhbnNpdGlvbjogLjMyNXMgYWxsIGVhc2UtaW4tb3V0O1xufVxuXG5mb3JtIGlucHV0LCBmb3JtIHNlbGVjdCwgZm9ybSB0ZXh0YXJlYSwgYTpob3ZlciB7XG4gIHRyYW5zaXRpb246IC4xNzVzIGFsbCBlYXNlLW91dDtcbn1cblxuLmxpbms6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmhhcy1zdHJpbmctc2VwYXJhdG9yOmFmdGVyIHtcbiAgY29udGVudDogXCI+XCI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAwIC4yNWVtO1xufVxuXG4vKipcbiAqIEdsb2JhbCBsYXlvdXQgcHJvcGVydGllc1xuICovXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxMTUwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogOTUlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDkwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5jb250YWluZXIge1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbn1cblxuLyoqXG4gKiBUaGUgaGVhZGVyLCB3aGljaCBpcyBhY3R1YWxseSBhIGxlZnQgc2lkZWJhciBvbiB0aGlzIHNpdGUuXG4gKiBDb250YWlucyBsb2dvIGFuZCBtYWluIG5hdmlnYXRpb24uXG4gKi9cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICBoZWFkZXIjbWFzdGhlYWQge1xuICAgIHdpZHRoOiAyMS43MzkxMyU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gIH1cbn1cblxuLyoqXG4gKiBUaGUgY29udGVudCBzZWN0aW9uIG9uIHRoZSByaWdodCBwYXJ0IG9mIHRoZSBzaXRlLlxuICovXG5tYWluI2NvbnRlbnQge1xuICBwYWRkaW5nLWJvdHRvbTogMi41cmVtO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgbWFpbiNjb250ZW50IHtcbiAgICB3aWR0aDogNzMuOTEzMDQlO1xuICAgIG1hcmdpbi1sZWZ0OiA0LjM0NzgzJTtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgcGFkZGluZy1ib3R0b206IDcuNXJlbTtcbiAgfVxufVxuXG4vKipcbiAqIFRoZSBmb290ZXIsIGFsd2F5cyBwb3NpdGlvbm5lZCBhdCB0aGUgYm90dG9tIG9mIHRoZSB2aWV3cG9ydC5cbiAqL1xuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIGZvb3RlciNmb290ZXIge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB6LWluZGV4OiAxMDA7XG4gIH1cbn1cblxuLyoqXG4gKiBTdHlsaW5ncyBmb3Igc3BlY2lmaWMgV1AtZ2VuZXJhdGVkIGNsYXNzZXMuXG4gKi9cbi5hbGlnbm5vbmUge1xuICBtYXJnaW46IDAuNzg3NXJlbSAyLjFyZW0gMi4xcmVtIDA7XG59XG5cbi5hbGlnbmNlbnRlciB7XG4gIGNsZWFyOiBib3RoO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAyLjFyZW0gYXV0bztcbn1cblxuLmFsaWdubGVmdCB7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW46IDAgMS41ZW0gLjI1ZW0gMDtcbn1cblxuLmFsaWducmlnaHQge1xuICBmbG9hdDogcmlnaHQ7XG4gIG1hcmdpbjogMCAwIDAuNzg3NXJlbSAyLjFyZW07XG59XG5cbi5jb21tZW50LWNvbnRlbnQgYSB7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cblxuaW1nLndwLXNtaWxleSB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIG1hcmdpbi10b3A6IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuLndwLWNhcHRpb24ge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDIuMXJlbTtcbn1cblxuLndwLWNhcHRpb24gZmlnY2FwdGlvbiB7XG4gIGJhY2tncm91bmQ6ICNhMmI3Y2E7XG4gIGZvbnQtc2l6ZTogLjc1cmVtO1xuICBwYWRkaW5nOiAuNWVtIC4yNWVtO1xuICBtYXJnaW4tdG9wOiAwO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi53cC1jYXB0aW9uIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLndwLWNhcHRpb24tdGV4dCB7XG4gIG1hcmdpbjogMWVtIDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmdhbGxlcnkge1xuICBtYXJnaW4tYm90dG9tOiAxLjVlbTtcbn1cblxuLmdhbGxlcnktaXRlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLmdhbGxlcnktY29sdW1ucy0yIC5nYWxsZXJ5LWl0ZW0ge1xuICBtYXgtd2lkdGg6IDUwJTtcbn1cblxuLmdhbGxlcnktY29sdW1ucy0zIC5nYWxsZXJ5LWl0ZW0ge1xuICBtYXgtd2lkdGg6IDMzLjMzJTtcbn1cblxuLmdhbGxlcnktY29sdW1ucy00IC5nYWxsZXJ5LWl0ZW0ge1xuICBtYXgtd2lkdGg6IDI1JTtcbn1cblxuLmdhbGxlcnktY29sdW1ucy01IC5nYWxsZXJ5LWl0ZW0ge1xuICBtYXgtd2lkdGg6IDIwJTtcbn1cblxuLmdhbGxlcnktY29sdW1ucy02IC5nYWxsZXJ5LWl0ZW0ge1xuICBtYXgtd2lkdGg6IDE2LjY2JTtcbn1cblxuLmdhbGxlcnktY29sdW1ucy03IC5nYWxsZXJ5LWl0ZW0ge1xuICBtYXgtd2lkdGg6IDE0LjI4JTtcbn1cblxuLmdhbGxlcnktY29sdW1ucy04IC5nYWxsZXJ5LWl0ZW0ge1xuICBtYXgtd2lkdGg6IDEyLjUlO1xufVxuXG4uZ2FsbGVyeS1jb2x1bW5zLTkgLmdhbGxlcnktaXRlbSB7XG4gIG1heC13aWR0aDogMTEuMTElO1xufVxuXG4uZ2FsbGVyeS1jYXB0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogU3R5bGluZ3MgZm9yIGJ1dHRvbnMgJiBsaW5rc1xuICovXG4uYnV0dG9uLCBmb3JtIGlucHV0W3R5cGU9c3VibWl0XSB7XG4gIGJvcmRlci1yYWRpdXM6IDEuMDVyZW07XG4gIGJhY2tncm91bmQ6ICM5RjM2MzY7XG4gIGNvbG9yOiAjZmZmO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmc6IC43NWVtIDRlbTtcbiAgYm9yZGVyOiAycHggc29saWQgIzlGMzYzNjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uYnV0dG9uOmhvdmVyLCBmb3JtIGlucHV0OmhvdmVyW3R5cGU9c3VibWl0XSwgLmJ1dHRvbi50cmFuc3BhcmVudCwgZm9ybSBpbnB1dC50cmFuc3BhcmVudFt0eXBlPXN1Ym1pdF0ge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBjb2xvcjogIzlGMzYzNjtcbn1cblxuLmJ1dHRvbi50cmFuc3BhcmVudDpob3ZlciwgZm9ybSBpbnB1dC50cmFuc3BhcmVudDpob3Zlclt0eXBlPXN1Ym1pdF0ge1xuICBiYWNrZ3JvdW5kOiAjOUYzNjM2O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmJ1dHRvbi5ibHVlLCBmb3JtIGlucHV0LmJsdWVbdHlwZT1zdWJtaXRdIHtcbiAgYmFja2dyb3VuZDogIzM2NEE2NDtcbiAgYm9yZGVyLWNvbG9yOiAjMzY0QTY0O1xufVxuXG4uYnV0dG9uLmJsdWU6aG92ZXIsIGZvcm0gaW5wdXQuYmx1ZTpob3Zlclt0eXBlPXN1Ym1pdF0ge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBjb2xvcjogIzM2NEE2NDtcbn1cblxuLmJ1dHRvbi53aGl0ZSwgZm9ybSBpbnB1dC53aGl0ZVt0eXBlPXN1Ym1pdF0ge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBjb2xvcjogIzlGMzYzNjtcbiAgYm9yZGVyLWNvbG9yOiAjZmZmO1xufVxuXG4uYnV0dG9uLndoaXRlOmhvdmVyLCBmb3JtIGlucHV0LndoaXRlOmhvdmVyW3R5cGU9c3VibWl0XSB7XG4gIGJhY2tncm91bmQ6ICM5RjM2MzY7XG4gIGJvcmRlci1jb2xvcjogIzlGMzYzNjtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5saW5rIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGNvbG9yOiAjOUYzNjM2O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5saW5rIHNwYW4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDEwO1xufVxuXG4ubGluazpiZWZvcmUge1xuICB6LWluZGV4OiAxO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogLTFweDtcbiAgdG9wOiAxMDAlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZDogIzlGMzYzNjtcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG59XG5cbi5saW5rOmhvdmVyIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5saW5rOmhvdmVyOmJlZm9yZSB7XG4gIHRvcDogLS4zMjVlbTtcbiAgbGVmdDogLS41ZW07XG4gIHJpZ2h0OiAtLjVlbTtcbiAgYm90dG9tOiAtLjMyNWVtO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgxNTksIDU0LCA1NCwgMC41KTtcbiAgYm9yZGVyLXJhZGl1czogLjc1cmVtO1xufVxuXG4vKipcbiAqIFN0eWxpbmdzIGZvciBmb3Jtc1xuICovXG5mb3JtIHtcbiAgLyoqXG5cdCAqIFZlcnkgYmFzaWMgQ29udGFjdCBGb3JtIDcgc3R5bGVzXG5cdCAqL1xufVxuXG5mb3JtIGlucHV0LCBmb3JtIHNlbGVjdCwgZm9ybSB0ZXh0YXJlYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNhMmI3Y2E7XG4gIG1hcmdpbjogMCAwIDAuNTI1cmVtIDA7XG4gIHBhZGRpbmc6IDEuMDVyZW07XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItcmFkaXVzOiAwLjI2MjVyZW07XG4gIGJhY2tncm91bmQ6ICNkM2RkZTY7XG59XG5cbmZvcm0gaW5wdXQ6Zm9jdXM6bm90KC5idXR0b24pLCBmb3JtIHNlbGVjdDpmb2N1czpub3QoLmJ1dHRvbiksIGZvcm0gdGV4dGFyZWE6Zm9jdXM6bm90KC5idXR0b24pIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm9yZGVyLWNvbG9yOiAjMzY0QTY0O1xufVxuXG5mb3JtIGlucHV0W3R5cGU9c3VibWl0XSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuZm9ybSAuYnV0dG9uLCBmb3JtIGlucHV0W3R5cGU9c3VibWl0XSB7XG4gIG1hcmdpbi10b3A6IDAuNTI1cmVtO1xufVxuXG5mb3JtIC5idXR0b246Zm9jdXMsIGZvcm0gaW5wdXQ6Zm9jdXNbdHlwZT1zdWJtaXRdIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuZm9ybS53cGNmNy1mb3JtIGJyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuZm9ybS53cGNmNy1mb3JtIHNwYW4ud3BjZjctZm9ybS1jb250cm9sLXdyYXAge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuZm9ybS53cGNmNy1mb3JtIGRpdi53cGNmNy1yZXNwb25zZS1vdXRwdXQge1xuICBkaXNwbGF5OiBub25lO1xuICBtYXJnaW46IDAgMCAxcmVtIDA7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZDogI2ViMDAzYjtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgcGFkZGluZzogLjVyZW0gMXJlbTtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbmZvcm0ud3BjZjctZm9ybSBkaXYud3BjZjctcmVzcG9uc2Utb3V0cHV0LndwY2Y3LW1haWwtc2VudC1vayB7XG4gIGJhY2tncm91bmQ6ICMyM2IzNzA7XG59XG5cbi8qKlxuICogU3R5bGluZ3MgZm9yIHRoZSBsZWZ0IHNpZGViYXIgKHdyYXBwZXIgaW4gI21hc3RoZWFkKSxcbiAqIGNvbnRhaW5pbmcgdGhlIGJyYW5kIGxvZ28gJiBwcmltYXJ5IG5hdmlnYXRpb24uXG4gKi9cbmhlYWRlciNtYXN0aGVhZCAuc2l0ZS10aXRsZSB7XG4gIG1hcmdpbjogNnZ3IGF1dG87XG4gIG1heC13aWR0aDogNzAlO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgaGVhZGVyI21hc3RoZWFkIC5zaXRlLXRpdGxlIHtcbiAgICBtYXgtd2lkdGg6IDkwJTtcbiAgfVxuICBoZWFkZXIjbWFzdGhlYWQgLnNpdGUtdGl0bGUgYTpob3ZlciB7XG4gICAgb3BhY2l0eTogLjY7XG4gIH1cbn1cblxuaGVhZGVyI21hc3RoZWFkIC5zaXRlLXRpdGxlIHAsIGhlYWRlciNtYXN0aGVhZCAuc2l0ZS10aXRsZSBoMSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDA7XG59XG5cbmhlYWRlciNtYXN0aGVhZCBuYXYubWFpbi1uYXZpZ2F0aW9uIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIGhlYWRlciNtYXN0aGVhZCBuYXYubWFpbi1uYXZpZ2F0aW9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG5oZWFkZXIjbWFzdGhlYWQgbmF2Lm1haW4tbmF2aWdhdGlvbiA+IHVsLm1lbnUgPiBsaSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMS4wNXJlbTtcbn1cblxuaGVhZGVyI21hc3RoZWFkIG5hdi5tYWluLW5hdmlnYXRpb24gPiB1bC5tZW51ID4gbGkgPiBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kOiAjMTcxZjJhO1xuICBwYWRkaW5nOiAuMTI1ZW0gLjI1ZW07XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbmhlYWRlciNtYXN0aGVhZCBuYXYubWFpbi1uYXZpZ2F0aW9uID4gdWwubWVudSA+IGxpOmhvdmVyID4gYSwgaGVhZGVyI21hc3RoZWFkIG5hdi5tYWluLW5hdmlnYXRpb24gPiB1bC5tZW51ID4gbGk6Zm9jdXMgPiBhLCBoZWFkZXIjbWFzdGhlYWQgbmF2Lm1haW4tbmF2aWdhdGlvbiA+IHVsLm1lbnUgPiBsaTpmb2N1cy13aXRoaW4gPiBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjMzY0QTY0O1xufVxuXG5oZWFkZXIjbWFzdGhlYWQgbmF2Lm1haW4tbmF2aWdhdGlvbiA+IHVsLm1lbnUgbGkuY3VycmVudC1tZW51LWl0ZW0gPiBhLCBoZWFkZXIjbWFzdGhlYWQgbmF2Lm1haW4tbmF2aWdhdGlvbiA+IHVsLm1lbnUgbGkuY3VycmVudC1tZW51LWFuY2VzdG9yID4gYSwgaGVhZGVyI21hc3RoZWFkIG5hdi5tYWluLW5hdmlnYXRpb24gPiB1bC5tZW51IGxpLmN1cnJlbnQtbWVudS1wYXJlbnQgPiBhIHtcbiAgYmFja2dyb3VuZDogIzlGMzYzNjtcbn1cblxuaGVhZGVyI21hc3RoZWFkIG5hdi5tYWluLW5hdmlnYXRpb24gPiB1bC5tZW51IGxpLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbmhlYWRlciNtYXN0aGVhZCBuYXYubWFpbi1uYXZpZ2F0aW9uID4gdWwubWVudSBsaS5tZW51LWl0ZW0taGFzLWNoaWxkcmVuOmhvdmVyID4gdWwuc3ViLW1lbnUsIGhlYWRlciNtYXN0aGVhZCBuYXYubWFpbi1uYXZpZ2F0aW9uID4gdWwubWVudSBsaS5tZW51LWl0ZW0taGFzLWNoaWxkcmVuOmZvY3VzID4gdWwuc3ViLW1lbnUsIGhlYWRlciNtYXN0aGVhZCBuYXYubWFpbi1uYXZpZ2F0aW9uID4gdWwubWVudSBsaS5tZW51LWl0ZW0taGFzLWNoaWxkcmVuOmZvY3VzLXdpdGhpbiA+IHVsLnN1Yi1tZW51IHtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgLyogc2hvd3Mgc3ViLW1lbnUgKi9cbiAgb3BhY2l0eTogMTtcbiAgei1pbmRleDogMTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAlKTtcbiAgdHJhbnNpdGlvbi1kZWxheTogMHMsIDBzLCAwLjJzO1xufVxuXG5oZWFkZXIjbWFzdGhlYWQgbmF2Lm1haW4tbmF2aWdhdGlvbiA+IHVsLm1lbnUgbGkgPiB1bC5zdWItbWVudSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMTAwJTtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTBlbTtcbiAgYmFja2dyb3VuZDogcmdiYSg1NCwgNzQsIDEwMCwgMC45KTtcbiAgcGFkZGluZy10b3A6IC4yNXJlbTtcbiAgcGFkZGluZy1ib3R0b206IC4yNXJlbTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTJyZW0pO1xuICB6LWluZGV4OiAtMTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQgMHMsIHZpc2liaWxpdHkgMHMgbGluZWFyIDAuMnMsIHotaW5kZXggMHMgbGluZWFyIDAuMDFzO1xufVxuXG5oZWFkZXIjbWFzdGhlYWQgbmF2Lm1haW4tbmF2aWdhdGlvbiA+IHVsLm1lbnUgbGkgPiB1bC5zdWItbWVudSBsaSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5oZWFkZXIjbWFzdGhlYWQgbmF2Lm1haW4tbmF2aWdhdGlvbiA+IHVsLm1lbnUgbGkgPiB1bC5zdWItbWVudSBsaSA+IGEge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAuODVyZW07XG4gIGNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAuMzc1ZW0gLjVlbSAuMzc1ZW0gLjc1ZW07XG59XG5cbi8qKlxuICogTG9nbyAmIFwiVG9wIGNvbnRlbnQgcXVvdGVcIiBzaGFyZSBzYW1lIGhlaWdodC9tYXJnaW5cbiAqIGZvciBiZXR0ZXIgYWxpZ25tZW50c1xuICovXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgYXNpZGUuaGVhZGVyLXRvcC1xdW90ZSwgaGVhZGVyI21hc3RoZWFkIC5zaXRlLXRpdGxlIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG1hcmdpbjogMi41dmggYXV0byA1dmg7XG4gICAgaGVpZ2h0OiAyNXZoO1xuICAgIG1pbi1oZWlnaHQ6IDEyLjVyZW07XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC1hc3BlY3QtcmF0aW86IDE2IC8gOSkgYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIGFzaWRlLmhlYWRlci10b3AtcXVvdGUsIGhlYWRlciNtYXN0aGVhZCAuc2l0ZS10aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMi41dmg7XG4gICAgaGVpZ2h0OiAxNnZoO1xuICB9XG59XG5cbi8qKlxuICogU3R5bGluZ3MgZm9yIHRoZSB0b3AgcXVvdGUgYmVmb3JlIGJvZHkgY29udGVudC5cbiAqIEhlaWdodCBpcyBzZXQgaW4gX2hlYWRlci5zY3NzIGJlY2F1c2VkIGl0IHNob3VsZCBiZVxuICogc3luY2VkIHdpdGggdGhlIGxvZ28gaGVpZ2h0LlxuICovXG5hc2lkZS5oZWFkZXItdG9wLXF1b3RlIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgYXNpZGUuaGVhZGVyLXRvcC1xdW90ZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgfVxufVxuXG5hc2lkZS5oZWFkZXItdG9wLXF1b3RlIGJsb2NrcXVvdGUge1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbWFyZ2luOiAwO1xufVxuXG5hc2lkZS5oZWFkZXItdG9wLXF1b3RlIGJsb2NrcXVvdGUgcCB7XG4gIG1hcmdpbjogMDtcbn1cblxuYXNpZGUuaGVhZGVyLXRvcC1xdW90ZSBibG9ja3F1b3RlIGNpdGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIG1hcmdpbi1ib3R0b206IDJlbTtcbn1cblxuLyoqXG4gKiBTdHlsZXMgZm9yIHRoZSBmb290ZXIgYXQgdGhlIGJvdHRvbSBvZiB0aGUgcGFnZVxuICogY29udGFpbmluZyBjb3B5cmlnaHQgJiBzb2NpYWwgbmV0d29ya3MgJiBzZWNvbmRhcnkgbmF2aWdhdGlvbi5cbiAqL1xuZm9vdGVyI2Zvb3RlciB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjMsIDMxLCA0MiwgMC44NzUpO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAxLjVyZW0gMXJlbTtcbiAgZm9udC1zaXplOiAuODVyZW07XG59XG5cbmZvb3RlciNmb290ZXIgYSB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG5mb290ZXIjZm9vdGVyIHNlY3Rpb24uZm9vdGVyLWRhdGEgZGl2LmNvcHlyaWdodCwgZm9vdGVyI2Zvb3RlciBzZWN0aW9uLmZvb3Rlci1kYXRhIG5hdi5zb2NpYWwsIGZvb3RlciNmb290ZXIgc2VjdGlvbi5mb290ZXItZGF0YSBuYXYudXRpbGl0eS1uYXZpZ2F0aW9uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDAgLjc1cmVtO1xufVxuXG5mb290ZXIjZm9vdGVyIHNlY3Rpb24uZm9vdGVyLWRhdGEgZGl2LmNvcHlyaWdodCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG5mb290ZXIjZm9vdGVyIHNlY3Rpb24uZm9vdGVyLWRhdGEgbmF2LnNvY2lhbCB1bCBsaS50aXRsZSB7XG4gIG1hcmdpbi1yaWdodDogLjVlbTtcbn1cblxuZm9vdGVyI2Zvb3RlciBzZWN0aW9uLmZvb3Rlci1kYXRhIG5hdi5zb2NpYWwgdWwgbGkgYSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogMCAuMTc1ZW07XG59XG5cbmZvb3RlciNmb290ZXIgc2VjdGlvbi5mb290ZXItZGF0YSBuYXYuc29jaWFsIHVsIGxpIGE6aG92ZXIge1xuICBvcGFjaXR5OiAuNjI1O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmZvb3RlciNmb290ZXIgc2VjdGlvbi5mb290ZXItZGF0YSBuYXYudXRpbGl0eS1uYXZpZ2F0aW9uIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuXG5mb290ZXIjZm9vdGVyIHNlY3Rpb24uZm9vdGVyLWRhdGEgbmF2LnV0aWxpdHktbmF2aWdhdGlvbiB1bCBsaSB7XG4gIG1hcmdpbi1yaWdodDogLjM3NWVtO1xufVxuXG5mb290ZXIjZm9vdGVyIHNlY3Rpb24uZm9vdGVyLWRhdGEgbmF2LnV0aWxpdHktbmF2aWdhdGlvbiB1bCBsaTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuXG4vKipcbiAqIFN0eWxpbmdzIGZvciBlbGVtZW50cyBpbiBwYWdlIGJvZHkgY29udGVudFxuICovXG4uZW50cnktY29udGVudCBwLCAuZW50cnktY29udGVudCB1bCwgLmVudHJ5LWNvbnRlbnQgb2wsIC5lbnRyeS1jb250ZW50IGRsIHtcbiAgbWFyZ2luOiAwIDAgMWVtO1xufVxuXG4uZW50cnktY29udGVudCBibG9ja3F1b3RlIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBwYWRkaW5nLWxlZnQ6IDRyZW07XG4gIG1hcmdpbjogMnJlbSAwIDEuNXJlbTtcbiAgcXVvdGVzOiBcIuKAnFwiIFwi4oCdXCIgXCLigJhcIiBcIuKAmVwiO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5lbnRyeS1jb250ZW50IGJsb2NrcXVvdGU6YmVmb3JlIHtcbiAgY29udGVudDogb3Blbi1xdW90ZTtcbiAgZm9udC1mYW1pbHk6IEdlb3JnaWEsICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgb3BhY2l0eTogLjMyNTtcbiAgZm9udC1zaXplOiA0cmVtO1xuICB0b3A6IC0xcmVtO1xuICBsZWZ0OiAycmVtO1xufVxuXG4uZW50cnktY29udGVudCB0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHRhYmxlLWxheW91dDogZml4ZWQ7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG4gIGRpc3BsYXk6IHRhYmxlO1xufVxuXG4uZW50cnktY29udGVudCB0YWJsZSB0ciB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYTJiN2NhO1xufVxuXG4uZW50cnktY29udGVudCB0YWJsZSB0ZCwgLmVudHJ5LWNvbnRlbnQgdGFibGUgdGgge1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIHBhZGRpbmc6IC4yNWVtIC4xMjVlbTtcbn1cblxuLmVudHJ5LWNvbnRlbnQgdGFibGUgdGgge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmVudHJ5LWNvbnRlbnQgZGwgZHQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmVudHJ5LWNvbnRlbnQgZGwgZGQge1xuICBtYXJnaW4tYm90dG9tOiAuNWVtO1xufVxuXG4uZW50cnktY29udGVudCBjaXRlIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4uZW50cnktY29udGVudCBjb2RlIHtcbiAgYmFja2dyb3VuZDogI2EyYjdjYTtcbn1cblxuLmVudHJ5LWNvbnRlbnQgaHIge1xuICBtYXJnaW46IDIuMXJlbSAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMGUxZTJjO1xufVxuXG4vKipcbiAqIFN0eWxpbmdzIGZvciBwb3N0IGFwcGFyZWFuY2UgaW4gbGlzdGluZy9hcmNoaXZlIHBhZ2VzXG4gKi9cbmFydGljbGUucG9zdCB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMGUxZTJjO1xuICBwYWRkaW5nLWJvdHRvbTogMS4wNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMS4wNXJlbTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIGFydGljbGUucG9zdCB7XG4gICAgcGFkZGluZy1ib3R0b206IDIuMXJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAzLjE1cmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgYXJ0aWNsZS5wb3N0Lmhhcy1mZWF0dXJlZC1pbWFnZSBkaXYuZW50cnktdGV4dC1jb250ZW50IHtcbiAgICB3aWR0aDogNjAlO1xuICAgIG1hcmdpbi1yaWdodDogNC41JTtcbiAgICBmbG9hdDogbGVmdDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIGFydGljbGUucG9zdC5oYXMtZmVhdHVyZWQtaW1hZ2UgZmlndXJlLmVudHJ5LWZlYXR1cmVkLWltYWdlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzM2NEE2NDtcbiAgICB3aWR0aDogMzUlO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgIGhlaWdodDogMDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBhZGRpbmctYm90dG9tOiAzNSU7XG4gIH1cbiAgYXJ0aWNsZS5wb3N0Lmhhcy1mZWF0dXJlZC1pbWFnZSBmaWd1cmUuZW50cnktZmVhdHVyZWQtaW1hZ2UgYSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuICBhcnRpY2xlLnBvc3QuaGFzLWZlYXR1cmVkLWltYWdlIGZpZ3VyZS5lbnRyeS1mZWF0dXJlZC1pbWFnZSBhIGltZyB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICBhcnRpY2xlLnBvc3QuaGFzLWZlYXR1cmVkLWltYWdlIGZpZ3VyZS5lbnRyeS1mZWF0dXJlZC1pbWFnZSBhOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDU0LCA3NCwgMTAwLCAwLjUpO1xuICB9XG59XG5cbi5lbnRyeS1oZWFkZXIge1xuICBtYXJnaW46IDA7XG59XG5cbi5lbnRyeS1oZWFkZXIgLmVudHJ5LXRpdGxlIHtcbiAgbWFyZ2luOiAwIDAgLjVlbTtcbn1cblxuZm9vdGVyLmVudHJ5LWZvb3RlciB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC1zaXplOiAwLjg1cmVtO1xufVxuXG5maWd1cmUuZW50cnktZmVhdHVyZWQtaW1hZ2Uge1xuICBkaXNwbGF5OiBub25lO1xuICBtYXJnaW46IDA7XG59XG5cbm5hdi5wYWdlLWxpbmtzIHtcbiAgY2xlYXI6IGJvdGg7XG4gIG1hcmdpbi10b3A6IDIuMXJlbTtcbn1cblxuOjotbW96LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6IHJnYmEoMTU5LCA1NCwgNTQsIDAuNjI1KTtcbn1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDE1OSwgNTQsIDU0LCAwLjYyNSk7XG59XG5cbmJvZHkubm8tc2Nyb2xsLCBodG1sLm5vLXNjcm9sbCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbmh0bWwge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmb250LXNpemU6IDE5cHg7XG4gIC8qKlxuXHQgKiBVc2UgdGhlIG1peGlucyBiZWxvdyBmb3IgYW4gYWRhcHRhdGl2ZSBmb250IHNpemUuXG5cdCAqL1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAyMS44NXB4O1xuICB9XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJTYW5jaGV6XCIsIFwiR2VvcmdpYVwiLCBcIlRhaG9tYVwiLCBcIkhlbHZldGljYSBOZXVlXCIsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjMEYxRTJEO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbmJvZHkjdGlueW1jZSB7XG4gIG1hcmdpbjogMXJlbTtcbn1cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICBmb250LWZhbWlseTogXCJUZWtvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbWFyZ2luOiAuNzVlbSAwIC4yNWVtO1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5oMSBzdHJvbmcsIGgyIHN0cm9uZywgaDMgc3Ryb25nLCBoNCBzdHJvbmcsIGg1IHN0cm9uZywgaDYgc3Ryb25nIHtcbiAgY29sb3I6ICMzNjRBNjQ7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbmgxLCAuaDEge1xuICBmb250LXNpemU6IDIuNjVyZW07XG59XG5cbmgyLCAuaDIge1xuICBmb250LXNpemU6IDIuMXJlbTtcbn1cblxuaDMsIC5oMyB7XG4gIGZvbnQtc2l6ZTogMS41NXJlbTtcbn1cblxuaDQsIC5oNCB7XG4gIGZvbnQtc2l6ZTogMS4zcmVtO1xufVxuXG5oNSwgLmg1IHtcbiAgZm9udC1zaXplOiAxLjFyZW07XG59XG5cbmg2LCAuaDYge1xuICBmb250LXNpemU6IDFyZW07XG59XG5cbmEge1xuICBjb2xvcjogIzM2NEE2NDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5hOnZpc2l0ZWQge1xuICBjb2xvcjogIzFiMjUzMjtcbn1cblxuYTpob3ZlciwgYTphY3RpdmUge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgY29sb3I6ICM5RjM2MzY7XG59XG4iLCIvKlxuVGhlbWUgTmFtZTogSW5wc3lkZSBNb3VudGFpbiBDb25xdWVyb3JcblRoZW1lIFVSSTogaHR0cHM6Ly9tb3NhaWthLmZyXG5BdXRob3I6IFBpZXJyZSBTYcOva2FsaVxuQXV0aG9yIFVSSTogaHR0cHM6Ly9tb3NhaWthLmZyXG5EZXNjcmlwdGlvbjogV29yZFByZXNzIFRoZW1lIChleGVyY2lzZSkgZm9yIHRoZSBNb3VudGFpbiBDb25xdWVyb3Igd2Vic2l0ZVxuVmVyc2lvbjogMS4wLjBcbkxpY2Vuc2U6IEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIHYyIG9yIGxhdGVyXG5MaWNlbnNlIFVSSTogaHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2dwbC0yLjAuaHRtbFxuVGV4dCBEb21haW46IGlucC1tY1xuVGFnczogY3VzdG9tXG5cblRoaXMgdGhlbWUsIGxpa2UgV29yZFByZXNzLCBpcyBsaWNlbnNlZCB1bmRlciB0aGUgR1BMLlxuQmFzZWQgb24gVW5kZXJzY29yZXMgaHR0cDovL3VuZGVyc2NvcmVzLm1lLywgKEMpIDIwMTItMjAxNyBBdXRvbWF0dGljLCBJbmMuXG5cbiovXG5cbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4vLyAgIyMgICMjIyAgICAjIyMgICMjIyMjICAgICMjIyMjICAgIyMjIyMgICAgIyMjIyMjICAgIyMjIyAgXG4vLyAgIyMgICMjICMgICMgIyMgICMjICAjIyAgIyMgICAjIyAgIyMgICMjICAgICAjIyAgICAjIyAgICAgXG4vLyAgIyMgICMjICAjIyAgIyMgICMjIyMjICAgIyMgICAjIyAgIyMjIyMgICAgICAjIyAgICAgIyMjICAgXG4vLyAgIyMgICMjICAgICAgIyMgICMjICAgICAgIyMgICAjIyAgIyMgICMjICAgICAjIyAgICAgICAjIyAgXG4vLyAgIyMgICMjICAgICAgIyMgICMjICAgICAgICMjIyMjICAgIyMgICAjIyAgICAjIyAgICAjIyMjICAgXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuQGltcG9ydCBcInZhcmlhYmxlc1wiO1xuQGltcG9ydCBcImJyZWFrcG9pbnRzXCI7XG5AaW1wb3J0IFwibWl4aW5zXCI7XG5cbkBpbXBvcnQgXCJsaWJzL25vcm1hbGl6ZVwiO1xuXG5AaW1wb3J0IFwicGFydGlhbHMvY29tbW9uXCI7XG5AaW1wb3J0IFwicGFydGlhbHMvbGF5b3V0XCI7XG5AaW1wb3J0IFwicGFydGlhbHMvd29yZHByZXNzXCI7XG5AaW1wb3J0IFwicGFydGlhbHMvYnV0dG9uc1wiO1xuQGltcG9ydCBcInBhcnRpYWxzL2Zvcm1zXCI7XG5AaW1wb3J0IFwicGFydGlhbHMvaGVhZGVyXCI7XG5AaW1wb3J0IFwicGFydGlhbHMvdG9wLXF1b3RlXCI7XG5AaW1wb3J0IFwicGFydGlhbHMvZm9vdGVyXCI7XG5AaW1wb3J0IFwicGFydGlhbHMvY29udGVudC1tYXJrdXBcIjtcbkBpbXBvcnQgXCJwYXJ0aWFscy9wb3N0XCI7XG5cbjo6LW1vei1zZWxlY3Rpb24geyBiYWNrZ3JvdW5kOiByZ2JhKCRyZWQsIC42MjUpOyB9XG46OnNlbGVjdGlvbiB7IGJhY2tncm91bmQ6IHJnYmEoJHJlZCwgLjYyNSk7IH1cblxuXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuLy8gICAjIyMjICAgIyMjIyMgICAjIyMgICAgIyMjICAjIyMgICAgIyMjICAgIyMjIyMgICAjIyAgICAgIyMgIFxuLy8gICMjICAgICAjIyAgICMjICAjIyAjICAjICMjICAjIyAjICAjICMjICAjIyAgICMjICAjIyMjICAgIyMgIFxuLy8gICMjICAgICAjIyAgICMjICAjIyAgIyMgICMjICAjIyAgIyMgICMjICAjIyAgICMjICAjIyAgIyMgIyMgIFxuLy8gICMjICAgICAjIyAgICMjICAjIyAgICAgICMjICAjIyAgICAgICMjICAjIyAgICMjICAjIyAgICAjIyMgIFxuLy8gICAjIyMjICAgIyMjIyMgICAjIyAgICAgICMjICAjIyAgICAgICMjICAgIyMjIyMgICAjIyAgICAgIyMgIFxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmJvZHksIGh0bWwge1xuXHQmLm5vLXNjcm9sbCB7XG5cdFx0b3ZlcmZsb3c6IGhpZGRlbjtcblx0fVxufVxuXG5odG1sIHtcblx0d2lkdGg6MTAwJTtcblx0aGVpZ2h0OjEwMCU7XG5cdCRmczogMTlweDtcblx0Zm9udC1zaXplOiRmcztcblxuXHRAaW5jbHVkZSByZXNwKHNtYWxsKSB7XG5cdFx0Zm9udC1zaXplOiAkZnMqMS4xNTtcblx0fVxuXHRcblx0LyoqXG5cdCAqIFVzZSB0aGUgbWl4aW5zIGJlbG93IGZvciBhbiBhZGFwdGF0aXZlIGZvbnQgc2l6ZS5cblx0ICovXG5cdC8vIEBpbmNsdWRlIHJlc3AobWVkaXVtLXVwKSB7XG5cdC8vIFx0Zm9udC1zaXplOiAkZnMqMS4wNzU7XG5cdC8vIH1cblxuXHQvLyBAaW5jbHVkZSByZXNwKGxhcmdlLXVwKSB7XG5cdC8vIFx0Zm9udC1zaXplOiAkZnMqMS4xMjU7XG5cdC8vIH1cblxuXHQvLyBAaW5jbHVkZSByZXNwKGV4dHJhLWxhcmdlLXVwKSB7XG5cdC8vIFx0Zm9udC1zaXplOiAkZnMqMS4yNTtcblx0Ly8gfVxufVxuXG5ib2R5IHtcblx0Zm9udC1mYW1pbHk6ICRmb250O1xuXHRjb2xvcjokdGV4dDtcblx0aGVpZ2h0OjEwMCU7XG5cblx0JiN0aW55bWNlIHtcblx0XHRtYXJnaW46IDFyZW07XG5cdH1cbn1cblxuaW1nIHtcblx0bWF4LXdpZHRoOjEwMCU7XG5cdGhlaWdodDogYXV0bztcblx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG5cdGZvbnQtZmFtaWx5OiRmb250Mjtcblx0Zm9udC13ZWlnaHQ6IDQwMDtcblx0bWFyZ2luOi43NWVtIDAgLjI1ZW07XG5cdGxldHRlci1zcGFjaW5nOiAtMC4wMWVtO1xuXHRsaW5lLWhlaWdodDogMS4yO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cblx0c3Ryb25nIHtcblx0XHRjb2xvcjokYmx1ZTtcblx0XHRmb250LXdlaWdodDogNDAwO1xuXHR9XG59XG5cbmgxLCAuaDEgeyBmb250LXNpemU6IDIuNjVyZW07IH1cbmgyLCAuaDIgeyBmb250LXNpemU6IDIuMXJlbTsgfVxuaDMsIC5oMyB7IGZvbnQtc2l6ZTogMS41NXJlbTsgfVxuaDQsIC5oNCB7IGZvbnQtc2l6ZTogMS4zcmVtOyB9XG5oNSwgLmg1IHsgZm9udC1zaXplOiAxLjFyZW07IH1cbmg2LCAuaDYgeyBmb250LXNpemU6IDFyZW07IH1cblxuYSB7XG5cdGNvbG9yOiRibHVlO1xuXHRAZXh0ZW5kICV0cmFuc19pbjtcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG5cdCY6aG92ZXIge1xuXHRcdEBleHRlbmQgJXRyYW5zX291dDtcblx0fVxuXG5cdCY6dmlzaXRlZCB7XG5cdFx0Y29sb3I6IGRhcmtlbigkYmx1ZSwgMTUlKTtcblx0fVxuXG5cdCY6aG92ZXIsICY6YWN0aXZlIHtcblx0XHR0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcblx0XHRjb2xvcjogJHJlZDtcblx0fVxufVxuIiwiLyoqXG4gKiBQcm9qZWN0IHNwZWNpZmljc1xuICovXG4kdGV4dCAgIDogIzBGMUUyRDtcbiRibHVlICAgOiAjMzY0QTY0O1xuJGJvcmRlciA6ICMwZTFlMmM7XG4kcmVkICAgIDogIzlGMzYzNjtcblxuJGxpZ2h0X2JvcmRlciA6IGRlc2F0dXJhdGUoIGxpZ2h0ZW4oICRib3JkZXIsIDYwJSApLCAyNSUgKTtcbiRkYXJrX2JsdWUgICAgOiBkYXJrZW4oICRibHVlLCAxNy41JSApO1xuXG4vKipcbiAqIFR5cG9ncmFwaHkgLyBmb250IG5hbWVzXG4gKi9cbiRmb250ICA6IFwiU2FuY2hlelwiLCBcIkdlb3JnaWFcIiwgXCJUYWhvbWFcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xuJGZvbnQyIDogXCJUZWtvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgc2Fucy1zZXJpZjtcblxuLyoqXG4gKiBSZXNwb25zaXZlIGJyZWFrcG9pbnRzXG4gKi9cbiR0aW55ICAgICAgIDogNDgwcHg7XG4kc21hbGwgICAgICA6IDU3NnB4O1xuJG1lZGl1bSAgICAgOiA3NjhweDtcbiRsYXJnZSAgICAgIDogMTAyNHB4O1xuJGV4dHJhLWxhcmdlOiAxMjAwcHg7XG5cbi8qKlxuICogTWFyZ2lucyBhbmQgcGFkZGluZ3NcbiAqL1xuJG1hcmdpbjogMS4wNXJlbTsgLy8gMTlweCBmb3IgPGh0bWw+LCBzbyAyMHB4ID0gMS4wNXJlbSIsIi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICBOb3JtYWxpemUuc2NzcyBzZXR0aW5nc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogSW5jbHVkZXMgbGVnYWN5IGJyb3dzZXIgc3VwcG9ydCBJRTYvN1xuICpcbiAqIFNldCB0byBmYWxzZSBpZiB5b3Ugd2FudCB0byBkcm9wIHN1cHBvcnQgZm9yIElFNiBhbmQgSUU3XG4gKi9cblxuJGxlZ2FjeV9icm93c2VyX3N1cHBvcnQ6IGZhbHNlICFkZWZhdWx0O1xuXG4vKiBCYXNlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICogMy4gQ29ycmVjdHMgdGV4dCByZXNpemluZyBvZGRseSBpbiBJRSA2Lzcgd2hlbiBib2R5IGBmb250LXNpemVgIGlzIHNldCB1c2luZ1xuICogIGBlbWAgdW5pdHMuXG4gKi9cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICBAaWYgJGxlZ2FjeV9icm93c2VyX3N1cHBvcnQge1xuICAgICpmb250LXNpemU6IDEwMCU7IC8qIDMgKi9cbiAgfVxufVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IG1hcmdpbi5cbiAqL1xuXG4qIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA2LzcvOC85IGFuZCBGaXJlZm94IDMuXG4gKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xuICBAaWYgJGxlZ2FjeV9icm93c2VyX3N1cHBvcnQge1xuICAgICpkaXNwbGF5OiBpbmxpbmU7XG4gICAgKnpvb206IDE7XG4gIH1cbn1cblxuLyoqXG4gKiBQcmV2ZW50cyBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgb2YgZm9jdXNlZCBlbGVtZW50cyB3aGVuIHRoZXkgYXJlIGFsc28gaW4gYW5cbiAqIGFjdGl2ZS9ob3ZlciBzdGF0ZS5cbiAqL1xuXG5hIHtcbiAgJjphY3RpdmUsICY6aG92ZXIge1xuICAgIG91dGxpbmU6IDA7XG4gIH07XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuQGlmICRsZWdhY3lfYnJvd3Nlcl9zdXBwb3J0IHtcbiAgYmxvY2txdW90ZSB7XG4gICAgbWFyZ2luOiAxZW0gNDBweDtcbiAgfVxufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qKlxuICogQWRkcmVzcyB2YXJpYWJsZSBgaDFgIGZvbnQtc2l6ZSBhbmQgbWFyZ2luIHdpdGhpbiBgc2VjdGlvbmAgYW5kIGBhcnRpY2xlYFxuICogY29udGV4dHMgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbkBpZiAkbGVnYWN5X2Jyb3dzZXJfc3VwcG9ydCB7XG4gIGgyIHtcbiAgICBmb250LXNpemU6IDEuNWVtO1xuICAgIG1hcmdpbjogMC44M2VtIDA7XG4gIH1cblxuICBoMyB7XG4gICAgZm9udC1zaXplOiAxLjE3ZW07XG4gICAgbWFyZ2luOiAxZW0gMDtcbiAgfVxuXG4gIGg0IHtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBtYXJnaW46IDEuMzNlbSAwO1xuICB9XG5cbiAgaDUge1xuICAgIGZvbnQtc2l6ZTogMC44M2VtO1xuICAgIG1hcmdpbjogMS42N2VtIDA7XG4gIH1cblxuICBoNiB7XG4gICAgZm9udC1zaXplOiAwLjY3ZW07XG4gICAgbWFyZ2luOiAyLjMzZW0gMDtcbiAgfVxufVxuXG4vKipcbiAqIEFkZHJlc3NlcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbkBpZiAkbGVnYWN5X2Jyb3dzZXJfc3VwcG9ydCB7XG5cbiAgLyoqXG4gICAqIEFkZHJlc3NlcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBJRSA2LzcuXG4gICAqL1xuXG4gIHAsXG4gIHByZSB7XG4gICAgKm1hcmdpbjogMWVtIDA7XG4gIH1cblxuICAvKlxuICAgKiBBZGRyZXNzZXMgQ1NTIHF1b3RlcyBub3Qgc3VwcG9ydGVkIGluIElFIDYvNy5cbiAgICovXG5cbiAgcSB7XG4gICAgKnF1b3Rlczogbm9uZTtcbiAgfVxuXG4gIC8qXG4gICAqIEFkZHJlc3NlcyBgcXVvdGVzYCBwcm9wZXJ0eSBub3Qgc3VwcG9ydGVkIGluIFNhZmFyaSA0LlxuICAgKi9cblxuICBxOmJlZm9yZSxcbiAgcTphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgY29udGVudDogbm9uZTtcbiAgfVxufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbkBpZiAkbGVnYWN5X2Jyb3dzZXJfc3VwcG9ydCB7XG5cbiAgLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgTGlzdHNcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAvKlxuICAgKiBBZGRyZXNzZXMgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gSUUgNi83LlxuICAgKi9cblxuICBkbCxcbiAgbWVudSxcbiAgb2wsXG4gIHVsIHtcbiAgICAqbWFyZ2luOiAxZW0gMDtcbiAgfVxuXG4gIGRkIHtcbiAgICAqbWFyZ2luOiAwIDAgMCA0MHB4O1xuICB9XG5cbiAgLypcbiAgICogQWRkcmVzc2VzIHBhZGRpbmdzIHNldCBkaWZmZXJlbnRseSBpbiBJRSA2LzcuXG4gICAqL1xuXG4gIG1lbnUsXG4gIG9sLFxuICB1bCB7XG4gICAgKnBhZGRpbmc6IDAgMCAwIDQwcHg7XG4gIH1cblxuICAvKlxuICAgKiBDb3JyZWN0cyBsaXN0IGltYWdlcyBoYW5kbGVkIGluY29ycmVjdGx5IGluIElFIDcuXG4gICAqL1xuXG4gIG5hdiB1bCxcbiAgbmF2IG9sIHtcbiAgICAqbGlzdC1zdHlsZTogbm9uZTtcbiAgICAqbGlzdC1zdHlsZS1pbWFnZTogbm9uZTtcbiAgfVxuXG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBJbXByb3ZlcyBpbWFnZSBxdWFsaXR5IHdoZW4gc2NhbGVkIGluIElFIDcuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyOiAwO1xuICBAaWYgJGxlZ2FjeV9icm93c2VyX3N1cHBvcnQge1xuICAgICotbXMtaW50ZXJwb2xhdGlvbi1tb2RlOiBiaWN1YmljOyAvKiAyICovXG4gIH1cbn1cblxuLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cblxuaHIge1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICogQ29ycmVjdCBmb250IGZhbWlseSBzZXQgb2RkbHkgaW4gSUUgNiwgU2FmYXJpIDQvNSwgYW5kIENocm9tZS5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgQGlmICRsZWdhY3lfYnJvd3Nlcl9zdXBwb3J0IHtcbiAgICBfZm9udC1mYW1pbHk6ICdjb3VyaWVyIG5ldycsIG1vbm9zcGFjZTtcbiAgfVxuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqIDQuIEltcHJvdmVzIGFwcGVhcmFuY2UgYW5kIGNvbnNpc3RlbmN5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMyAqL1xuICBAaWYgJGxlZ2FjeV9icm93c2VyX3N1cHBvcnQge1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMyAqL1xuICAgICp2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyAvKiAzICovXG4gIH1cbn1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAqICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKiA0LiBSZW1vdmVzIGlubmVyIHNwYWNpbmcgaW4gSUUgNyB3aXRob3V0IGFmZmVjdGluZyBub3JtYWwgdGV4dCBpbnB1dHMuXG4gKiAgS25vd24gaXNzdWU6IGlubmVyIHNwYWNpbmcgcmVtYWlucyBpbiBJRSA2LlxuICovXG5cbmJ1dHRvbixcbmh0bWwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuaW5wdXRbdHlwZT1cInJlc2V0XCJdLFxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG4gIGN1cnNvcjogcG9pbnRlcjsgLyogMyAqL1xuICBAaWYgJGxlZ2FjeV9icm93c2VyX3N1cHBvcnQge1xuICAgICpvdmVyZmxvdzogdmlzaWJsZTsgIC8qIDQgKi9cbiAgfVxufVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cblxuYnV0dG9uW2Rpc2FibGVkXSxcbmh0bWwgaW5wdXRbZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5pbnB1dDo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuXG5pbnB1dCB7XG4gIGxpbmUtaGVpZ2h0OiBub3JtYWw7XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKiAgS25vd24gaXNzdWU6IGV4Y2VzcyBwYWRkaW5nIHJlbWFpbnMgaW4gSUUgNi5cbiAqL1xuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDIgKi9cbiAgQGlmICRsZWdhY3lfYnJvd3Nlcl9zdXBwb3J0IHtcbiAgICAqaGVpZ2h0OiAxM3B4OyAvKiAzICovXG4gICAgKndpZHRoOiAxM3B4OyAvKiAzICovXG4gIH1cbn1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAqIDMuIENvcnJlY3RzIHRleHQgbm90IHdyYXBwaW5nIGluIEZpcmVmb3ggMy5cbiAqIDQuIENvcnJlY3RzIGFsaWdubWVudCBkaXNwbGF5ZWQgb2RkbHkgaW4gSUUgNi83LlxuICovXG5cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG4gIEBpZiAkbGVnYWN5X2Jyb3dzZXJfc3VwcG9ydCB7XG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMyAqL1xuICAgICptYXJnaW4tbGVmdDogLTdweDsgLyogNCAqL1xuICB9XG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG59IiwiLyoqXG4gKiBDb21tb24gc3R1ZmYgKHBsYWNlaG9sZGVycy9yZXVzYWJsZSBjbGFzc2VzKVxuICovXG4uc2NyZWVuLXJlYWRlci10ZXh0IHtcblx0aGVpZ2h0OiAwLjA2MjVyZW07XG5cdHdpZHRoOiAwLjA2MjVyZW07XG5cdGNsaXA6IHJlY3QoMC4wNjI1cmVtLCAwLjA2MjVyZW0sIDAuMDYyNXJlbSwgMC4wNjI1cmVtKTtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuICBcbi5zY3JlZW4tcmVhZGVyLXRleHQ6aG92ZXIsIC5zY3JlZW4tcmVhZGVyLXRleHQ6YWN0aXZlLCAuc2NyZWVuLXJlYWRlci10ZXh0OmZvY3VzIHtcblx0aGVpZ2h0OiBhdXRvO1xuXHR3aWR0aDogYXV0bztcblx0YmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTtcblx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXHRib3gtc2hhZG93OiAwIDAgMC4xMjVyZW0gMC4xMjVyZW0gcmdiYSgwLCAwLCAwLCAwLjYpO1xuXHRjbGlwOiBhdXRvO1xuXHRjb2xvcjogIzIwNzM5QTtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGZvbnQtc2l6ZTogMC44NzVyZW07XG5cdGZvbnQtd2VpZ2h0OiA3MDA7XG5cdGxlZnQ6IDAuMzEyNXJlbTtcblx0bGluZS1oZWlnaHQ6IG5vcm1hbDtcblx0cGFkZGluZzogMC45Mzc1cmVtIDEuNDM3NXJlbSAwLjg3NXJlbTtcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHR0b3A6IDAuMzEyNXJlbTtcblx0ei1pbmRleDogMTAwMDAwO1xufVxuXG4uY2xlYXJmaXgsICVjbGVhcmZpeCB7XG5cdCY6OmFmdGVyIHtcblx0XHRjb250ZW50OiBcIlwiO1xuXHRcdGRpc3BsYXk6IHRhYmxlO1xuXHRcdGNsZWFyOiBib3RoO1xuXHRcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdH1cbn1cblxuLmlubGluZSB7XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmxpc3QtaW5saW5lLCAlbGlzdC1pbmxpbmUge1xuXHRsaXN0LXN0eWxlOiBub25lO1xuXHRtYXJnaW46MDtcblx0cGFkZGluZzowO1xuXG5cdGxpIHtcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdH1cbn1cblxuJXRyYW5zX2luIHsgdHJhbnNpdGlvbjouMzI1cyBhbGwgZWFzZS1pbi1vdXQ7IH1cbiV0cmFuc19pbl9kZWxheWVkIHsgdHJhbnNpdGlvbjouMzI1cyBhbGwgZWFzZS1pbi1vdXQgLjEyNXM7IH1cbiV0cmFuc19vdXQgeyB0cmFuc2l0aW9uOi4xNzVzIGFsbCBlYXNlLW91dDsgfVxuJXBzZXVkbyB7IGNvbnRlbnQ6XCJcIjsgcG9zaXRpb246YWJzb2x1dGU7IGRpc3BsYXk6YmxvY2s7IH1cblxuLmhhcy1zdHJpbmctc2VwYXJhdG9yIHtcblx0JjphZnRlciB7XG5cdFx0Y29udGVudDogXCI+XCI7XG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdG1hcmdpbjowIC4yNWVtO1xuXHR9XG59IiwiLyoqXG4gKiBHbG9iYWwgbGF5b3V0IHByb3BlcnRpZXNcbiAqL1xuJGNvbnRhaW5lcl93aWR0aDogMTE1MDtcbiRoZWFkZXJfd2lkdGggICA6IDI1MDtcbiRjb250ZW50X3dpZHRoICA6IDg1MDtcblxuLmNvbnRhaW5lciB7XG5cdG1heC13aWR0aDogJGNvbnRhaW5lcl93aWR0aCoxcHg7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHR3aWR0aDogOTUlO1xuXG5cdEBpbmNsdWRlIHJlc3AobWVkaXVtLXVwKSB7XG5cdFx0d2lkdGg6OTAlO1xuXHR9XG5cblx0QGluY2x1ZGUgcmVzcChsYXJnZS11cCkge1xuXHRcdHdpZHRoOjgwJTtcblx0fVxufVxuXG5zZWN0aW9uLnNpdGUtY29udGVudCB7XG5cdEBleHRlbmQgLmNsZWFyZml4O1xufVxuXG4vKipcbiAqIFRoZSBoZWFkZXIsIHdoaWNoIGlzIGFjdHVhbGx5IGEgbGVmdCBzaWRlYmFyIG9uIHRoaXMgc2l0ZS5cbiAqIENvbnRhaW5zIGxvZ28gYW5kIG1haW4gbmF2aWdhdGlvbi5cbiAqL1xuaGVhZGVyI21hc3RoZWFkIHtcblx0QGluY2x1ZGUgcmVzcChtZWRpdW0tdXApIHtcblx0XHR3aWR0aDogKCAoICRoZWFkZXJfd2lkdGggKiAxMDAgKSAvICRjb250YWluZXJfd2lkdGggKSAqIDElO1xuXHRcdGZsb2F0OiBsZWZ0O1xuXHR9XG59XG5cbi8qKlxuICogVGhlIGNvbnRlbnQgc2VjdGlvbiBvbiB0aGUgcmlnaHQgcGFydCBvZiB0aGUgc2l0ZS5cbiAqL1xubWFpbiNjb250ZW50IHtcblx0cGFkZGluZy1ib3R0b206IDIuNXJlbTtcblxuXHRAaW5jbHVkZSByZXNwKG1lZGl1bS11cCkge1xuXHRcdHdpZHRoOiAoICggJGNvbnRlbnRfd2lkdGggKiAxMDAgKSAvICRjb250YWluZXJfd2lkdGggKSAqIDElO1xuXHRcdG1hcmdpbi1sZWZ0OiAoICggKCAkY29udGFpbmVyX3dpZHRoIC0gJGNvbnRlbnRfd2lkdGggLSAkaGVhZGVyX3dpZHRoICkgKiAxMDAgKSAvICRjb250YWluZXJfd2lkdGggKSAqIDElO1xuXHRcdGZsb2F0OiByaWdodDtcblx0XHRwYWRkaW5nLWJvdHRvbTogNy41cmVtO1xuXHR9XHRcbn1cblxuLyoqXG4gKiBUaGUgZm9vdGVyLCBhbHdheXMgcG9zaXRpb25uZWQgYXQgdGhlIGJvdHRvbSBvZiB0aGUgdmlld3BvcnQuXG4gKi9cbmZvb3RlciNmb290ZXIge1xuXHRAaW5jbHVkZSByZXNwKG1lZGl1bS11cCkge1xuXHRcdHBvc2l0aW9uOiBmaXhlZDtcblx0XHRib3R0b206IDA7XG5cdFx0bGVmdDogMDtcblx0XHR3aWR0aDogMTAwJTtcblx0XHR6LWluZGV4OjEwMDtcblx0fVxufSIsIi8qKlxuICogU3R5bGluZ3MgZm9yIHNwZWNpZmljIFdQLWdlbmVyYXRlZCBjbGFzc2VzLlxuICovXG4uYWxpZ25ub25lIHtcblx0bWFyZ2luOiAkbWFyZ2luKjAuNzUgJG1hcmdpbioyICRtYXJnaW4qMiAwO1xufVxuXG4uYWxpZ25jZW50ZXIge1xuXHRjbGVhcjogYm90aDtcblx0ZGlzcGxheTogYmxvY2s7XG5cdG1hcmdpbjogJG1hcmdpbioyIGF1dG87XG59XG5cbi5hbGlnbmxlZnQge1xuXHRmbG9hdDogbGVmdDtcblx0bWFyZ2luOiAwIDEuNWVtIC4yNWVtIDA7XG59XG5cbi5hbGlnbnJpZ2h0IHtcblx0ZmxvYXQ6IHJpZ2h0O1xuXHRtYXJnaW46IDAgMCAkbWFyZ2luKjAuNzUgJG1hcmdpbioyO1xufVxuXG4uY29tbWVudC1jb250ZW50IGEge1xuXHR3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG59XG5cbi5ieXBvc3RhdXRob3Ige1xufVxuXG5pbWcud3Atc21pbGV5IHtcblx0bWFyZ2luLWJvdHRvbTogMDtcblx0bWFyZ2luLXRvcDogMDtcblx0cGFkZGluZzogMDtcblx0Ym9yZGVyOiBub25lO1xufVxuXG4ud3AtY2FwdGlvbiB7XG5cdG1heC13aWR0aDogMTAwJTtcblx0bWFyZ2luLWJvdHRvbTogJG1hcmdpbioyO1xuXG5cdGZpZ2NhcHRpb24ge1xuXHRiYWNrZ3JvdW5kOiAkbGlnaHRfYm9yZGVyO1xuXHRmb250LXNpemU6IC43NXJlbTtcblx0cGFkZGluZzogLjVlbSAuMjVlbTtcblx0bWFyZ2luLXRvcDowO1xuXHRmb250LXN0eWxlOiBpdGFsaWM7XG5cdH1cbn1cblxuLndwLWNhcHRpb24gaW1nIHtcblx0ZGlzcGxheTogYmxvY2s7XG5cdG1hcmdpbjogMCBhdXRvO1xufVxuXG4ud3AtY2FwdGlvbi10ZXh0IHtcblx0bWFyZ2luOiAxZW0gMDtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZ2FsbGVyeSB7XG5cdG1hcmdpbi1ib3R0b206IDEuNWVtO1xufVxuXG4uZ2FsbGVyeS1pdGVtIHtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHR3aWR0aDogMTAwJTtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuXG5cdEBmb3IgJGkgZnJvbSAyIHRocm91Z2ggOSB7XG5cdC5nYWxsZXJ5LWNvbHVtbnMtI3skaX0gJiB7XG5cdFx0JHc6IGZsb29yKDEwMDAwIC8gJGkpIC8gMTAwO1xuXHRcdG1heC13aWR0aDogdW5xdW90ZSgkdyArICclJyk7XG5cdFx0fVxuXHR9XG59XG5cbi5nYWxsZXJ5LWNhcHRpb24ge1xuXHRkaXNwbGF5OiBibG9jaztcbn0iLCIvKipcbiAqIFN0eWxpbmdzIGZvciBidXR0b25zICYgbGlua3NcbiAqL1xuLmJ1dHRvbiB7XG5cdGJvcmRlci1yYWRpdXM6ICRtYXJnaW47XG5cdGJhY2tncm91bmQ6ICRyZWQ7XG5cdGNvbG9yOiNmZmY7XG5cdC8vZm9udC1zaXplOiAxLjRyZW07XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0cGFkZGluZzouNzVlbSA0ZW07XG5cdGJvcmRlcjoycHggc29saWQgJHJlZDtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXG5cdCY6aG92ZXIsICYudHJhbnNwYXJlbnQge1xuXHRcdGJhY2tncm91bmQ6I2ZmZjtcblx0XHRjb2xvcjokcmVkO1xuXHR9XG5cblx0Ji50cmFuc3BhcmVudCB7XG5cdFx0Jjpob3ZlciB7XG5cdFx0XHRiYWNrZ3JvdW5kOiRyZWQ7XG5cdFx0XHRjb2xvcjojZmZmO1xuXHRcdH1cblx0fVxuXG5cdCYuYmx1ZSB7XG5cdFx0YmFja2dyb3VuZDokYmx1ZTtcblx0XHRib3JkZXItY29sb3I6JGJsdWU7XG5cblx0XHQmOmhvdmVyIHtcblx0XHRcdGJhY2tncm91bmQ6ICNmZmY7XG5cdFx0XHRjb2xvcjokYmx1ZTtcblx0XHR9XG5cdH1cblxuXHQmLndoaXRlIHtcblx0XHRiYWNrZ3JvdW5kOiNmZmY7XG5cdFx0Y29sb3I6JHJlZDtcblx0XHRib3JkZXItY29sb3I6I2ZmZjtcblxuXHRcdCY6aG92ZXIge1xuXHRcdFx0YmFja2dyb3VuZDokcmVkO1xuXHRcdFx0Ym9yZGVyLWNvbG9yOiRyZWQ7XG5cdFx0XHRjb2xvcjojZmZmO1xuXHRcdH1cblx0fVxufVxuXG4ubGluayB7XG5cdGZvbnQtd2VpZ2h0OiBib2xkO1xuXHRjb2xvcjokcmVkO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cblx0c3BhbiB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdHotaW5kZXg6MTA7XG5cdH1cblxuXHQmOmJlZm9yZSB7XG5cdFx0ei1pbmRleDoxO1xuXHRcdEBleHRlbmQgJXBzZXVkbztcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0Ym90dG9tOi0xcHg7XG5cdFx0dG9wOjEwMCU7XG5cdFx0bGVmdDowO1xuXHRcdHJpZ2h0OjA7XG5cdFx0YmFja2dyb3VuZDokcmVkO1xuXHRcdGJvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7XG5cdFx0QGV4dGVuZCAldHJhbnNfaW47XG5cdH1cblxuXHQmOmhvdmVyIHtcblx0XHRjb2xvcjojZmZmO1xuXG5cdFx0JjpiZWZvcmUge1xuXHRcdFx0dG9wOi0uMzI1ZW07XG5cdFx0XHRsZWZ0Oi0uNWVtO1xuXHRcdFx0cmlnaHQ6LS41ZW07XG5cdFx0XHRib3R0b206LS4zMjVlbTtcblx0XHRcdC8vYmFja2dyb3VuZDogcmdiYSgkcmVkLCAuMjUpO1xuXHRcdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cdFx0XHRib3JkZXI6MXB4IHNvbGlkIHJnYmEoJHJlZCwgLjUpO1xuXHRcdFx0Ym9yZGVyLXJhZGl1czouNzVyZW07XG5cdFx0XHRAZXh0ZW5kICV0cmFuc19pbjtcblx0XHR9XG5cdH1cbn0iLCIvKipcbiAqIFN0eWxpbmdzIGZvciBmb3Jtc1xuICovXG5mb3JtIHtcblx0JGdyYXk6IGxpZ2h0ZW4oICRsaWdodF9ib3JkZXIsIDE1JSApO1xuXG5cdGlucHV0LCBzZWxlY3QsIHRleHRhcmVhIHtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRib3JkZXI6bm9uZTtcblx0XHRib3JkZXI6MXB4IHNvbGlkICRsaWdodF9ib3JkZXI7XG5cdFx0bWFyZ2luOiAwIDAgJG1hcmdpbi8yIDA7XG5cdFx0cGFkZGluZzogJG1hcmdpbjtcblx0XHR3aWR0aDoxMDAlO1xuXHRcdGJvcmRlci1yYWRpdXM6ICRtYXJnaW4vNDtcblx0XHRiYWNrZ3JvdW5kOiAkZ3JheTtcblx0XHRAZXh0ZW5kICV0cmFuc19vdXQ7XG5cblx0XHQmOmZvY3VzOm5vdCguYnV0dG9uKSB7XG5cdFx0XHRvdXRsaW5lOm5vbmU7XG5cdFx0XHRib3JkZXItY29sb3I6JGJsdWU7XG5cdFx0XHRAZXh0ZW5kICV0cmFuc19pbjtcblx0XHR9XG5cdH1cblxuXHRpbnB1dFt0eXBlPXN1Ym1pdF0ge1xuXHRcdEBleHRlbmQgLmJ1dHRvbjtcblx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdH1cblxuXHQuYnV0dG9uIHtcblx0XHRtYXJnaW4tdG9wOiAkbWFyZ2luLzI7XG5cblx0XHQmOmZvY3VzIHtcblx0XHRcdG91dGxpbmU6IG5vbmU7XHRcdFxuXHRcdH1cblx0fVxuXG5cdHRleHRhcmVhIHtcblx0XHQvL2JhY2tncm91bmQ6bGlnaHRlbigkYm9yZGVyLCAxNSUpO1xuXHRcdC8vYm9yZGVyOm5vbmU7XG5cdH1cblxuXHQvKipcblx0ICogVmVyeSBiYXNpYyBDb250YWN0IEZvcm0gNyBzdHlsZXNcblx0ICovXG5cdCYud3BjZjctZm9ybSB7XG5cdFx0YnIge1xuXHRcdFx0ZGlzcGxheTogbm9uZTtcblx0XHR9XG5cdFx0XG5cdFx0c3Bhbi53cGNmNy1mb3JtLWNvbnRyb2wtd3JhcCB7XG5cdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHR9XG5cblx0XHRkaXYud3BjZjctcmVzcG9uc2Utb3V0cHV0IHtcblx0XHRcdGRpc3BsYXk6IG5vbmU7XG5cdFx0XHRtYXJnaW46MCAwIDFyZW0gMDtcblx0XHRcdGNvbG9yOnJnYmEoI2ZmZiwgLjkpO1xuXHRcdFx0Ym9yZGVyOm5vbmU7XG5cdFx0XHRiYWNrZ3JvdW5kOnJnYigyMzUsIDAsIDU5KTtcblx0XHRcdHdpZHRoOjEwMCU7XG5cdFx0XHRib3JkZXItcmFkaXVzOjRweDtcblx0XHRcdHBhZGRpbmc6LjVyZW0gMXJlbTtcblx0XHRcdGZvbnQtc2l6ZToxLjI1cmVtO1xuXHRcdFx0Zm9udC1zdHlsZTogaXRhbGljO1xuXG5cdFx0XHQmLndwY2Y3LW1haWwtc2VudC1vayB7XG5cdFx0XHRcdGJhY2tncm91bmQ6IzIzYjM3MDtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0iLCIvKipcbiAqIFN0eWxpbmdzIGZvciB0aGUgbGVmdCBzaWRlYmFyICh3cmFwcGVyIGluICNtYXN0aGVhZCksXG4gKiBjb250YWluaW5nIHRoZSBicmFuZCBsb2dvICYgcHJpbWFyeSBuYXZpZ2F0aW9uLlxuICovXG5oZWFkZXIjbWFzdGhlYWQge1xuXHQuc2l0ZS10aXRsZSB7XG5cdFx0bWFyZ2luOiA2dncgYXV0bztcblx0XHRtYXgtd2lkdGg6NzAlO1xuXG5cdFx0QGluY2x1ZGUgcmVzcChtZWRpdW0tdXApIHtcblx0XHRcdG1heC13aWR0aDogOTAlO1xuXHRcdFx0Ly8gU2l6aW5nIGlzIGRvbmUgYXQgdGhlIGVuZCBvZiB0aGUgZmlsZSwgYmVjYXVzZSBoZWlnaHQgc2hvdWxkIGJlIHN5bmNlZCB3aXRoIGFzaWRlLmhlYWRlci10b3AtcXVvdGVcblxuXHRcdFx0YSB7XG5cdFx0XHRcdCY6aG92ZXIge1xuXHRcdFx0XHRcdG9wYWNpdHk6IC42O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cCwgaDEge1xuXHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHRtYXJnaW46IDA7XG5cdFx0fVxuXHR9XG5cblx0bmF2Lm1haW4tbmF2aWdhdGlvbiB7XG5cdFx0ZGlzcGxheTogbm9uZTtcblxuXHRcdEBpbmNsdWRlIHJlc3AobWVkaXVtLXVwKSB7XG5cdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHR9XG5cblx0XHQ+IHVsLm1lbnUge1xuXHRcdFx0QGV4dGVuZCAlbGlzdC1pbmxpbmU7XG5cblx0XHRcdD4gbGkge1xuXHRcdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRcdFx0d2lkdGg6MTAwJTtcblx0XHRcdFx0bWFyZ2luLWJvdHRvbTogJG1hcmdpbjtcblxuXHRcdFx0XHQ+IGEge1xuXHRcdFx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdFx0XHRcdGZvbnQtc2l6ZTogMXJlbTtcblx0XHRcdFx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0XHRcdFx0YmFja2dyb3VuZDogJGRhcmtfYmx1ZTtcblx0XHRcdFx0XHRwYWRkaW5nOi4xMjVlbSAuMjVlbTtcblx0XHRcdFx0XHRjb2xvcjojZmZmO1xuXHRcdFx0XHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdFx0XHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdFx0XHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQmOmhvdmVyLCAmOmZvY3VzLCAmOmZvY3VzLXdpdGhpbiB7XG5cdFx0XHRcdFx0PiBhIHtcblx0XHRcdFx0XHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0XHRcdFx0XHRcdGJhY2tncm91bmQ6ICRibHVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRsaSB7XG5cdFx0XHRcdCYuY3VycmVudC1tZW51LWl0ZW0sICYuY3VycmVudC1tZW51LWFuY2VzdG9yLCAmLmN1cnJlbnQtbWVudS1wYXJlbnQge1xuXHRcdFx0XHRcdD4gYSB7XG5cdFx0XHRcdFx0XHRiYWNrZ3JvdW5kOiAkcmVkO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdCYubWVudS1pdGVtLWhhcy1jaGlsZHJlbiB7XG5cdFx0XHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXG5cdFx0XHRcdFx0Jjpob3ZlciwgJjpmb2N1cywgJjpmb2N1cy13aXRoaW4ge1xuXHRcdFx0XHRcdFx0PiB1bC5zdWItbWVudSB7XG5cdFx0XHRcdFx0XHRcdHZpc2liaWxpdHk6IHZpc2libGU7IC8qIHNob3dzIHN1Yi1tZW51ICovXG5cdFx0XHRcdFx0XHRcdG9wYWNpdHk6IDE7XG5cdFx0XHRcdFx0XHRcdHotaW5kZXg6IDE7XG5cdFx0XHRcdFx0XHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwJSk7XG5cdFx0XHRcdFx0XHRcdHRyYW5zaXRpb24tZGVsYXk6IDBzLCAwcywgMC4ycztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQ+IHVsLnN1Yi1tZW51IHtcblx0XHRcdFx0XHRAZXh0ZW5kICVsaXN0LWlubGluZTtcblx0XHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRcdFx0bGVmdDoxMDAlO1xuXHRcdFx0XHRcdHRvcDowO1xuXHRcdFx0XHRcdHdpZHRoOiAxMGVtO1xuXHRcdFx0XHRcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50aXplKCAkYmx1ZSwgLjEgKTtcblx0XHRcdFx0XHRwYWRkaW5nLXRvcDouMjVyZW07XG5cdFx0XHRcdFx0cGFkZGluZy1ib3R0b206LjI1cmVtO1xuXHRcdFx0XHRcdHZpc2liaWxpdHk6IGhpZGRlbjtcblx0XHRcdFx0XHRvcGFjaXR5OiAwO1xuXHRcdFx0XHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMnJlbSk7XG5cdFx0XHRcdFx0ei1pbmRleDogLTE7XG5cdFx0XHRcdFx0dHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbi1vdXQgMHMsIHZpc2liaWxpdHkgMHMgbGluZWFyIDAuMnMsIHotaW5kZXggMHMgbGluZWFyIDAuMDFzO1xuXHRcdFx0XHRcdFxuXHRcdFx0XHRcdGxpIHtcblx0XHRcdFx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXG5cdFx0XHRcdFx0XHQ+IGEge1xuXHRcdFx0XHRcdFx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXHRcdFx0XHRcdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRcdFx0XHRcdFx0Zm9udC1zaXplOiAuODVyZW07XG5cdFx0XHRcdFx0XHRcdGNvbG9yOiNmZmY7XG5cdFx0XHRcdFx0XHRcdHBhZGRpbmc6LjM3NWVtIC41ZW0gLjM3NWVtIC43NWVtO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG4vKipcbiAqIExvZ28gJiBcIlRvcCBjb250ZW50IHF1b3RlXCIgc2hhcmUgc2FtZSBoZWlnaHQvbWFyZ2luXG4gKiBmb3IgYmV0dGVyIGFsaWdubWVudHNcbiAqL1xuYXNpZGUuaGVhZGVyLXRvcC1xdW90ZSwgaGVhZGVyI21hc3RoZWFkIC5zaXRlLXRpdGxlIHtcblx0QGluY2x1ZGUgcmVzcChtZWRpdW0tdXApIHtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRcdG1hcmdpbjogMi41dmggYXV0byA1dmg7XG5cdFx0aGVpZ2h0OiAyNXZoO1xuXHRcdG1pbi1oZWlnaHQ6IDEyLjVyZW07XG5cdH1cblxuXHQvLyBBdm9pZCB1c2UgbWFyZ2luLWJvdHRvbSB3aGVuIHdlIGhhdmUgYSB3ZWlyZCBwb3J0cmFpdC1yYXRpbyB2aWV3cG9ydFxuXHRAbWVkaWEgc2NyZWVuIGFuZCAobWF4LWFzcGVjdC1yYXRpbzogMTYvOSkgYW5kIChtaW4td2lkdGg6ICN7JG1lZGl1bX0pIHtcblx0XHRtYXJnaW4tYm90dG9tOiAyLjV2aDtcblx0XHRoZWlnaHQ6IDE2dmg7XG5cdFx0Ly9taW4taGVpZ2h0OiAxMi41cmVtO1xuXHR9XG59IiwiLyoqXG4gKiBTdHlsaW5ncyBmb3IgdGhlIHRvcCBxdW90ZSBiZWZvcmUgYm9keSBjb250ZW50LlxuICogSGVpZ2h0IGlzIHNldCBpbiBfaGVhZGVyLnNjc3MgYmVjYXVzZWQgaXQgc2hvdWxkIGJlXG4gKiBzeW5jZWQgd2l0aCB0aGUgbG9nbyBoZWlnaHQuXG4gKi9cbmFzaWRlLmhlYWRlci10b3AtcXVvdGUge1xuXHRkaXNwbGF5OiBub25lO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cblx0QGluY2x1ZGUgcmVzcChtZWRpdW0tdXApIHtcblx0XHRkaXNwbGF5OiBmbGV4O1xuXHR9XG5cblx0YmxvY2txdW90ZSB7XG5cdFx0Zm9udC1zaXplOiAxLjVyZW07XG5cdFx0bWFyZ2luOjA7XG5cdFx0XG5cdFx0cCB7XG5cdFx0XHRtYXJnaW46MDtcblx0XHR9XG5cblx0XHRjaXRlIHtcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdFx0Zm9udC1zaXplOiAxcmVtO1xuXHRcdFx0Zm9udC1zdHlsZTogbm9ybWFsO1xuXHRcdFx0bWFyZ2luLWJvdHRvbTogMmVtO1xuXHRcdH1cblx0fVxufSIsIi8qKlxuICogU3R5bGVzIGZvciB0aGUgZm9vdGVyIGF0IHRoZSBib3R0b20gb2YgdGhlIHBhZ2VcbiAqIGNvbnRhaW5pbmcgY29weXJpZ2h0ICYgc29jaWFsIG5ldHdvcmtzICYgc2Vjb25kYXJ5IG5hdmlnYXRpb24uXG4gKi9cbmZvb3RlciNmb290ZXIge1xuXHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudGl6ZSggJGRhcmtfYmx1ZSwgLjEyNSApO1xuXHRjb2xvcjogI2ZmZjtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRwYWRkaW5nOiAxLjVyZW0gMXJlbTtcblx0Zm9udC1zaXplOiAuODVyZW07XG5cblx0YSB7XG5cdFx0Y29sb3I6I2ZmZjtcblx0fVxuXG5cdHNlY3Rpb24uZm9vdGVyLWRhdGEge1xuXHRcdGRpdi5jb3B5cmlnaHQsIG5hdi5zb2NpYWwsIG5hdi51dGlsaXR5LW5hdmlnYXRpb24ge1xuXHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdFx0bWFyZ2luOiAwIC43NXJlbTtcblx0XHR9XG5cblx0XHRkaXYuY29weXJpZ2h0IHtcblx0XHRcdG1hcmdpbi1sZWZ0OiAwO1xuXHRcdH1cblxuXHRcdG5hdi5zb2NpYWwge1xuXHRcdFx0dWwge1xuXHRcdFx0XHRAZXh0ZW5kICVsaXN0LWlubGluZTtcblxuXHRcdFx0XHRsaSB7XG5cdFx0XHRcdFx0Ji50aXRsZSB7XG5cdFx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IC41ZW07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0YSB7XG5cdFx0XHRcdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0XHRcdFx0XHRwYWRkaW5nOjAgLjE3NWVtO1xuXG5cdFx0XHRcdFx0XHQmOmhvdmVyIHtcblx0XHRcdFx0XHRcdFx0b3BhY2l0eTogLjYyNTtcblx0XHRcdFx0XHRcdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdG5hdi51dGlsaXR5LW5hdmlnYXRpb24ge1xuXHRcdFx0bWFyZ2luLXJpZ2h0OiAwO1xuXG5cdFx0XHR1bCB7XG5cdFx0XHRcdEBleHRlbmQgJWxpc3QtaW5saW5lO1xuXG5cdFx0XHRcdGxpIHtcblx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IC4zNzVlbTtcblxuXHRcdFx0XHRcdCY6bGFzdC1jaGlsZCB7XG5cdFx0XHRcdFx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59IiwiLyoqXG4gKiBTdHlsaW5ncyBmb3IgZWxlbWVudHMgaW4gcGFnZSBib2R5IGNvbnRlbnRcbiAqL1xuLmVudHJ5LWNvbnRlbnQge1xuXHRwLCB1bCwgb2wsIGRsIHtcblx0XHRtYXJnaW46IDAgMCAxZW07XG5cdH1cblxuXHRibG9ja3F1b3RlIHtcblx0XHRmb250LXN0eWxlOiBpdGFsaWM7XG5cdFx0cGFkZGluZy1sZWZ0OiA0cmVtO1xuXHRcdG1hcmdpbjoycmVtIDAgMS41cmVtO1xuXHRcdHF1b3RlczogXCJcXDIwMUNcIlwiXFwyMDFEXCJcIlxcMjAxOFwiXCJcXDIwMTlcIjtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cblx0XHQmOmJlZm9yZSB7XG5cdFx0XHRjb250ZW50OiBvcGVuLXF1b3RlO1xuXHRcdFx0Zm9udC1mYW1pbHk6IEdlb3JnaWEsICdUaW1lcyBOZXcgUm9tYW4nLCBUaW1lcywgc2VyaWY7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRvcGFjaXR5OiAuMzI1O1xuXHRcdFx0Zm9udC1zaXplOiA0cmVtO1xuXHRcdFx0dG9wOi0xcmVtO1xuXHRcdFx0bGVmdDoycmVtO1xuXHRcdH1cblx0fVxuXG5cdHRhYmxlIHtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRtYXgtd2lkdGg6IDEwMCU7XG5cdFx0dGFibGUtbGF5b3V0OiBmaXhlZDtcblx0XHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuXHRcdHZlcnRpY2FsLWFsaWduOiB0b3A7XG5cdFx0bWFyZ2luLWJvdHRvbTogMnJlbTtcblx0XHRkaXNwbGF5OiB0YWJsZTtcblxuXHRcdHRyIHtcblx0XHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbGlnaHRfYm9yZGVyO1xuXHRcdH1cblxuXHRcdHRkLCB0aCB7XG5cdFx0XHR2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuXHRcdFx0Y3Vyc29yOiBkZWZhdWx0O1xuXHRcdFx0cGFkZGluZzouMjVlbSAuMTI1ZW07XG5cdFx0fVxuXG5cdFx0dGgge1xuXHRcdFx0Zm9udC13ZWlnaHQ6IGJvbGQ7XG5cdFx0fVxuXHR9XG5cblx0ZGwge1xuXHRcdGR0IHtcblx0XHRcdGZvbnQtd2VpZ2h0OiBib2xkO1xuXHRcdH1cblxuXHRcdGRkIHtcblx0XHRcdG1hcmdpbi1ib3R0b206IC41ZW07XG5cdFx0fVxuXHR9XG5cblx0Y2l0ZSB7XG5cdFx0Zm9udC1zdHlsZTogaXRhbGljO1xuXHR9XG5cblx0Y29kZSB7XG5cdFx0YmFja2dyb3VuZDogJGxpZ2h0X2JvcmRlcjtcblx0fVxuXG5cdGhyIHtcblx0XHRtYXJnaW46ICRtYXJnaW4qMiAwO1xuXHRcdGJvcmRlcjpub25lO1xuXHRcdGJvcmRlci10b3A6MXB4IHNvbGlkICRib3JkZXI7XG5cdH1cbn0iLCIvKipcbiAqIFN0eWxpbmdzIGZvciBwb3N0IGFwcGFyZWFuY2UgaW4gbGlzdGluZy9hcmNoaXZlIHBhZ2VzXG4gKi9cbmFydGljbGUucG9zdCB7XG5cdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkYm9yZGVyO1xuXHRwYWRkaW5nLWJvdHRvbTokbWFyZ2luO1xuXHRtYXJnaW4tYm90dG9tOiRtYXJnaW47XG5cblx0QGluY2x1ZGUgcmVzcChtZWRpdW0tdXApIHtcblx0XHRwYWRkaW5nLWJvdHRvbTokbWFyZ2luKjI7XG5cdFx0bWFyZ2luLWJvdHRvbTokbWFyZ2luKjM7XG5cdH1cblxuXHQmLmhhcy1mZWF0dXJlZC1pbWFnZSB7XG5cdFx0ZGl2LmVudHJ5LXRleHQtY29udGVudCB7XG5cdFx0XHRAaW5jbHVkZSByZXNwKGxhcmdlLXVwKSB7XG5cdFx0XHRcdHdpZHRoOjYwJTtcblx0XHRcdFx0bWFyZ2luLXJpZ2h0OiA0LjUlO1xuXHRcdFx0XHRmbG9hdDpsZWZ0O1xuXHRcdFx0fVxuXHRcdH1cblx0XG5cdFx0ZmlndXJlLmVudHJ5LWZlYXR1cmVkLWltYWdlIHtcblx0XHRcdEBpbmNsdWRlIHJlc3AobGFyZ2UtdXApIHtcblx0XHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRcdFx0YmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcblx0XHRcdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcblx0XHRcdFx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcblx0XHRcdFx0Ym9yZGVyOiAxcHggc29saWQgJGJsdWU7XG5cdFx0XHRcdHdpZHRoOjM1JTtcblx0XHRcdFx0ZmxvYXQ6cmlnaHQ7XG5cdFx0XHRcdGJvcmRlci1yYWRpdXM6MTAwJTtcblx0XHRcdFx0aGVpZ2h0OjA7XG5cdFx0XHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdFx0XHRcdHBhZGRpbmctYm90dG9tOiAzNSU7XG5cdFxuXHRcdFx0XHRhIHtcblx0XHRcdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRcdFx0d2lkdGg6MTAwJTtcblx0XHRcdFx0XHRoZWlnaHQ6MTAwJTtcblx0XG5cdFx0XHRcdFx0aW1nIHtcblx0XHRcdFx0XHRcdG9wYWNpdHk6MDtcblx0XHRcdFx0XHR9XG5cdFxuXHRcdFx0XHRcdCY6aG92ZXIge1xuXHRcdFx0XHRcdFx0YmFja2dyb3VuZDogcmdiYSggJGJsdWUsIC41ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVx0XG5cdH1cbn1cblxuLmVudHJ5LWhlYWRlciB7XG5cdG1hcmdpbjowO1xuXG5cdC5lbnRyeS10aXRsZSB7XG5cdFx0bWFyZ2luOiAwIDAgLjVlbTtcblx0fVxufVxuXG5kaXYuZW50cnktY29udGVudCB7XG5cdEBleHRlbmQgLmNsZWFyZml4O1xufVxuXG5mb290ZXIuZW50cnktZm9vdGVyIHtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xuXHRmb250LXNpemU6IDAuODVyZW07XG59XG5cbmRpdi5lbnRyeS10ZXh0LWNvbnRlbnQge1xuXHRAZXh0ZW5kIC5jbGVhcmZpeDtcbn1cblxuZmlndXJlLmVudHJ5LWZlYXR1cmVkLWltYWdlIHtcblx0ZGlzcGxheTogbm9uZTtcblx0bWFyZ2luOjA7XG59XG5cbm5hdi5wYWdlLWxpbmtzIHtcblx0Y2xlYXI6Ym90aDtcblx0bWFyZ2luLXRvcDogJG1hcmdpbioyO1xufSIsIi8vIEFkZGl0aW9ubmFsIFwidXRpbGl0eVwiIGJyZWFrcG9pbnRzIGFsaWFzZXNcbi8vIGV4LiBAaW5jbHVkZSByZXNwb25kLXRvKFwibWVkaXVtLXVwXCIpIHsuLi59XG4kYnAtYWxpYXNlczogKFxuICAndGlueScgICA6IChtYXgtd2lkdGg6ICN7JHRpbnkgLSAxfSksXG4gICdzbWFsbCcgIDogKG1heC13aWR0aDogI3skc21hbGwgLSAxfSksXG4gICdtZWRpdW0nIDogKG1heC13aWR0aDogI3skbWVkaXVtIC0gMX0pLFxuICAnbGFyZ2UnIDogKG1heC13aWR0aDogI3skbGFyZ2UgLSAxfSksXG4gICdleHRyYS1sYXJnZScgIDogKG1heC13aWR0aDogI3skZXh0cmEtbGFyZ2UgLSAxfSksXG4gICd0aW55LXVwJyAgIDogKG1pbi13aWR0aDogI3skdGlueX0pLFxuICAnc21hbGwtdXAnICA6IChtaW4td2lkdGg6ICN7JHNtYWxsfSksXG4gICdtZWRpdW0tdXAnIDogKG1pbi13aWR0aDogI3skbWVkaXVtfSksXG4gICdsYXJnZS11cCcgOiAobWluLXdpZHRoOiAjeyRsYXJnZX0pLFxuICAnZXh0cmEtbGFyZ2UtdXAnIDogKG1pbi13aWR0aDogI3skZXh0cmEtbGFyZ2V9KSxcbiAgJ3JldGluYScgOiAobWluLXJlc29sdXRpb246IDJkcHB4KVxuKTtcblxuLy8gU291cmNlIDogaHR0cHM6Ly93d3cuc2l0ZXBvaW50LmNvbS9tYW5hZ2luZy1yZXNwb25zaXZlLWJyZWFrcG9pbnRzLXNhc3MvXG5AbWl4aW4gcmVzcCgkbmFtZSkge1xuICAvLyBJZiB0aGUga2V5IGV4aXN0cyBpbiB0aGUgbWFwXG4gIEBpZiBtYXAtaGFzLWtleSgkYnAtYWxpYXNlcywgJG5hbWUpIHtcblx0Ly8gUHJpbnRzIGEgbWVkaWEgcXVlcnkgYmFzZWQgb24gdGhlIHZhbHVlXG5cdEBtZWRpYSAje2luc3BlY3QobWFwLWdldCgkYnAtYWxpYXNlcywgJG5hbWUpKX0ge1xuXHQgIEBjb250ZW50O1xuXHR9XG4gIH1cblxuICAvLyBJZiB0aGUga2V5IGRvZXNuJ3QgZXhpc3QgaW4gdGhlIG1hcFxuICBAZWxzZSB7XG5cdEB3YXJuIFwiVW5mb3J0dW5hdGVseSwgbm8gdmFsdWUgY291bGQgYmUgcmV0cmlldmVkIGZyb20gYCN7JGJyZWFrcG9pbnR9YC4gXCJcblx0XHQrIFwiUGxlYXNlIG1ha2Ugc3VyZSBpdCBpcyBkZWZpbmVkIGluIGAkYnJlYWtwb2ludHNgIG1hcC5cIjtcbiAgfVxufSJdfQ== */
